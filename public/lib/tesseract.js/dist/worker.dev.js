/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\n//# sourceURL=webpack://tesseract.js/./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/bmp-js/index.js":
/*!**************************************!*\
  !*** ./node_modules/bmp-js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @author shaozilee\n *\n * support 1bit 4bit 8bit 24bit decode\n * encode with 24bit\n * \n */\nvar encode = __webpack_require__(/*! ./lib/encoder */ \"./node_modules/bmp-js/lib/encoder.js\"),\n    decode = __webpack_require__(/*! ./lib/decoder */ \"./node_modules/bmp-js/lib/decoder.js\");\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/bmp-js/index.js?");

/***/ }),

/***/ "./node_modules/bmp-js/lib/decoder.js":
/*!********************************************!*\
  !*** ./node_modules/bmp-js/lib/decoder.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\nfunction BmpDecoder(buffer, is_with_alpha) {\n  this.pos = 0;\n  this.buffer = buffer;\n  this.is_with_alpha = !!is_with_alpha;\n  this.bottom_up = true;\n  this.flag = this.buffer.toString(\"utf-8\", 0, this.pos += 2);\n  if (this.flag != \"BM\") throw new Error(\"Invalid BMP File\");\n  this.parseHeader();\n  this.parseRGBA();\n}\n\nBmpDecoder.prototype.parseHeader = function () {\n  this.fileSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.reserved = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.offset = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.headerSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.width = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.height = this.buffer.readInt32LE(this.pos);\n  this.pos += 4;\n  this.planes = this.buffer.readUInt16LE(this.pos);\n  this.pos += 2;\n  this.bitPP = this.buffer.readUInt16LE(this.pos);\n  this.pos += 2;\n  this.compress = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.rawSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.hr = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.vr = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.colors = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.importantColors = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n\n  if (this.bitPP === 16 && this.is_with_alpha) {\n    this.bitPP = 15;\n  }\n\n  if (this.bitPP < 15) {\n    var len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n    this.palette = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var blue = this.buffer.readUInt8(this.pos++);\n      var green = this.buffer.readUInt8(this.pos++);\n      var red = this.buffer.readUInt8(this.pos++);\n      var quad = this.buffer.readUInt8(this.pos++);\n      this.palette[i] = {\n        red: red,\n        green: green,\n        blue: blue,\n        quad: quad\n      };\n    }\n  }\n\n  if (this.height < 0) {\n    this.height *= -1;\n    this.bottom_up = false;\n  }\n};\n\nBmpDecoder.prototype.parseRGBA = function () {\n  var bitn = \"bit\" + this.bitPP;\n  var len = this.width * this.height * 4;\n  this.data = new Buffer(len);\n  this[bitn]();\n};\n\nBmpDecoder.prototype.bit1 = function () {\n  var xlen = Math.ceil(this.width / 8);\n  var mode = xlen % 4;\n  var y = this.height >= 0 ? this.height - 1 : -this.height;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n\n    for (var x = 0; x < xlen; x++) {\n      var b = this.buffer.readUInt8(this.pos++);\n      var location = line * this.width * 4 + x * 8 * 4;\n\n      for (var i = 0; i < 8; i++) {\n        if (x * 8 + i < this.width) {\n          var rgb = this.palette[b >> 7 - i & 0x1];\n          this.data[location + i * 4] = 0;\n          this.data[location + i * 4 + 1] = rgb.blue;\n          this.data[location + i * 4 + 2] = rgb.green;\n          this.data[location + i * 4 + 3] = rgb.red;\n        } else {\n          break;\n        }\n      }\n    }\n\n    if (mode != 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit4 = function () {\n  //RLE-4\n  if (this.compress == 2) {\n    var setPixelData = function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    };\n\n    this.data.fill(0xff);\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n    var low_nibble = false; //for all count of pixel\n\n    while (location < this.data.length) {\n      var a = this.buffer.readUInt8(this.pos++);\n      var b = this.buffer.readUInt8(this.pos++); //absolute mode\n\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n\n          location = lines * this.width * 4;\n          low_nibble = false;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.readUInt8(this.pos++);\n          var y = this.buffer.readUInt8(this.pos++);\n\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          var c = this.buffer.readUInt8(this.pos++);\n\n          for (var i = 0; i < b; i++) {\n            if (low_nibble) {\n              setPixelData.call(this, c & 0x0f);\n            } else {\n              setPixelData.call(this, (c & 0xf0) >> 4);\n            }\n\n            if (i & 1 && i + 1 < b) {\n              c = this.buffer.readUInt8(this.pos++);\n            }\n\n            low_nibble = !low_nibble;\n          }\n\n          if ((b + 1 >> 1 & 1) == 1) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          if (low_nibble) {\n            setPixelData.call(this, b & 0x0f);\n          } else {\n            setPixelData.call(this, (b & 0xf0) >> 4);\n          }\n\n          low_nibble = !low_nibble;\n        }\n      }\n    }\n  } else {\n    var xlen = Math.ceil(this.width / 2);\n    var mode = xlen % 4;\n\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n\n      for (var x = 0; x < xlen; x++) {\n        var b = this.buffer.readUInt8(this.pos++);\n        var location = line * this.width * 4 + x * 2 * 4;\n        var before = b >> 4;\n        var after = b & 0x0F;\n        var rgb = this.palette[before];\n        this.data[location] = 0;\n        this.data[location + 1] = rgb.blue;\n        this.data[location + 2] = rgb.green;\n        this.data[location + 3] = rgb.red;\n        if (x * 2 + 1 >= this.width) break;\n        rgb = this.palette[after];\n        this.data[location + 4] = 0;\n        this.data[location + 4 + 1] = rgb.blue;\n        this.data[location + 4 + 2] = rgb.green;\n        this.data[location + 4 + 3] = rgb.red;\n      }\n\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit8 = function () {\n  //RLE-8\n  if (this.compress == 1) {\n    var setPixelData = function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    };\n\n    this.data.fill(0xff);\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n\n    while (location < this.data.length) {\n      var a = this.buffer.readUInt8(this.pos++);\n      var b = this.buffer.readUInt8(this.pos++); //absolute mode\n\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n\n          location = lines * this.width * 4;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.readUInt8(this.pos++);\n          var y = this.buffer.readUInt8(this.pos++);\n\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          for (var i = 0; i < b; i++) {\n            var c = this.buffer.readUInt8(this.pos++);\n            setPixelData.call(this, c);\n          }\n\n          if (b & 1 == 1) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          setPixelData.call(this, b);\n        }\n      }\n    }\n  } else {\n    var mode = this.width % 4;\n\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n\n      for (var x = 0; x < this.width; x++) {\n        var b = this.buffer.readUInt8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n\n        if (b < this.palette.length) {\n          var rgb = this.palette[b];\n          this.data[location] = 0;\n          this.data[location + 1] = rgb.blue;\n          this.data[location + 2] = rgb.green;\n          this.data[location + 3] = rgb.red;\n        } else {\n          this.data[location] = 0;\n          this.data[location + 1] = 0xFF;\n          this.data[location + 2] = 0xFF;\n          this.data[location + 3] = 0xFF;\n        }\n      }\n\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit15 = function () {\n  var dif_w = this.width % 3;\n\n  var _11111 = parseInt(\"11111\", 2),\n      _1_5 = _11111;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.readUInt16LE(this.pos);\n      this.pos += 2;\n      var blue = (B & _1_5) / _1_5 * 255 | 0;\n      var green = (B >> 5 & _1_5) / _1_5 * 255 | 0;\n      var red = (B >> 10 & _1_5) / _1_5 * 255 | 0;\n      var alpha = B >> 15 ? 0xFF : 0x00;\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = alpha;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    } //skip extra bytes\n\n\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit16 = function () {\n  var dif_w = this.width % 2 * 2; //default xrgb555\n\n  this.maskRed = 0x7C00;\n  this.maskGreen = 0x3E0;\n  this.maskBlue = 0x1F;\n  this.mask0 = 0;\n\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.maskGreen = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.maskBlue = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.mask0 = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n  }\n\n  var ns = [0, 0, 0];\n\n  for (var i = 0; i < 16; i++) {\n    if (this.maskRed >> i & 0x01) ns[0]++;\n    if (this.maskGreen >> i & 0x01) ns[1]++;\n    if (this.maskBlue >> i & 0x01) ns[2]++;\n  }\n\n  ns[1] += ns[0];\n  ns[2] += ns[1];\n  ns[0] = 8 - ns[0];\n  ns[1] -= 8;\n  ns[2] -= 8;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.readUInt16LE(this.pos);\n      this.pos += 2;\n      var blue = (B & this.maskBlue) << ns[0];\n      var green = (B & this.maskGreen) >> ns[1];\n      var red = (B & this.maskRed) >> ns[2];\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    } //skip extra bytes\n\n\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit24 = function () {\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n\n    for (var x = 0; x < this.width; x++) {\n      //Little Endian rgb\n      var blue = this.buffer.readUInt8(this.pos++);\n      var green = this.buffer.readUInt8(this.pos++);\n      var red = this.buffer.readUInt8(this.pos++);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    } //skip extra bytes\n\n\n    this.pos += this.width % 4;\n  }\n};\n/**\n * add 32bit decode func\n * @author soubok\n */\n\n\nBmpDecoder.prototype.bit32 = function () {\n  //BI_BITFIELDS\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.maskGreen = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.maskBlue = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    this.mask0 = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian rgba\n        var alpha = this.buffer.readUInt8(this.pos++);\n        var blue = this.buffer.readUInt8(this.pos++);\n        var green = this.buffer.readUInt8(this.pos++);\n        var red = this.buffer.readUInt8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  } else {\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian argb\n        var blue = this.buffer.readUInt8(this.pos++);\n        var green = this.buffer.readUInt8(this.pos++);\n        var red = this.buffer.readUInt8(this.pos++);\n        var alpha = this.buffer.readUInt8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.getData = function () {\n  return this.data;\n};\n\nmodule.exports = function (bmpData) {\n  var decoder = new BmpDecoder(bmpData);\n  return decoder;\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/bmp-js/lib/decoder.js?");

/***/ }),

/***/ "./node_modules/bmp-js/lib/encoder.js":
/*!********************************************!*\
  !*** ./node_modules/bmp-js/lib/encoder.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/**\n * @author shaozilee\n *\n * BMP format encoder,encode 24bit BMP\n * Not support quality compression\n *\n */\nfunction BmpEncoder(imgData) {\n  this.buffer = imgData.data;\n  this.width = imgData.width;\n  this.height = imgData.height;\n  this.extraBytes = this.width % 4;\n  this.rgbSize = this.height * (3 * this.width + this.extraBytes);\n  this.headerInfoSize = 40;\n  this.data = [];\n  /******************header***********************/\n\n  this.flag = \"BM\";\n  this.reserved = 0;\n  this.offset = 54;\n  this.fileSize = this.rgbSize + this.offset;\n  this.planes = 1;\n  this.bitPP = 24;\n  this.compress = 0;\n  this.hr = 0;\n  this.vr = 0;\n  this.colors = 0;\n  this.importantColors = 0;\n}\n\nBmpEncoder.prototype.encode = function () {\n  var tempBuffer = new Buffer(this.offset + this.rgbSize);\n  this.pos = 0;\n  tempBuffer.write(this.flag, this.pos, 2);\n  this.pos += 2;\n  tempBuffer.writeUInt32LE(this.fileSize, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.reserved, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.offset, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.headerInfoSize, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.width, this.pos);\n  this.pos += 4;\n  tempBuffer.writeInt32LE(-this.height, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt16LE(this.planes, this.pos);\n  this.pos += 2;\n  tempBuffer.writeUInt16LE(this.bitPP, this.pos);\n  this.pos += 2;\n  tempBuffer.writeUInt32LE(this.compress, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.rgbSize, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.hr, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.vr, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.colors, this.pos);\n  this.pos += 4;\n  tempBuffer.writeUInt32LE(this.importantColors, this.pos);\n  this.pos += 4;\n  var i = 0;\n  var rowBytes = 3 * this.width + this.extraBytes;\n\n  for (var y = 0; y < this.height; y++) {\n    for (var x = 0; x < this.width; x++) {\n      var p = this.pos + y * rowBytes + x * 3;\n      i++; //a\n\n      tempBuffer[p] = this.buffer[i++]; //b\n\n      tempBuffer[p + 1] = this.buffer[i++]; //g\n\n      tempBuffer[p + 2] = this.buffer[i++]; //r\n    }\n\n    if (this.extraBytes > 0) {\n      var fillOffset = this.pos + y * rowBytes + this.width * 3;\n      tempBuffer.fill(0, fillOffset, fillOffset + this.extraBytes);\n    }\n  }\n\n  return tempBuffer;\n};\n\nmodule.exports = function (imgData, quality) {\n  if (typeof quality === 'undefined') quality = 100;\n  var encoder = new BmpEncoder(imgData);\n  var data = encoder.encode();\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/bmp-js/lib/encoder.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\");\n\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\");\n\nvar customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\n\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    var proto = {\n      foo: function foo() {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function get() {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function get() {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\n\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  } // Return an augmented `Uint8Array` instance\n\n\n  var buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n\n    return allocUnsafe(arg);\n  }\n\n  return from(arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));\n  }\n\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n\n  var valueOf = value.valueOf && value.valueOf();\n\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n\n  var b = fromObject(value);\n  if (b) return b;\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n}; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\n\n\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\n\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n\n  return createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\n\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n\n  return fromArrayLike(arrayView);\n}\n\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n\n  var buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  } // Return an augmented `Uint8Array` instance\n\n\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + _typeof(string));\n  }\n\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\n\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + _typeof(target));\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  var strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  var i;\n\n  for (i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte = void 0,\n          thirdByte = void 0,\n          fourthByte = void 0,\n          tempCodePoint = void 0;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);\n  var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n  var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  var val = (first << 24) + // Overflow\n  this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);\n});\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  var lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  var lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\n\n\nvar errors = {};\n\nfunction E(sym, getMessage, Base) {\n  errors[sym] = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n\n    var _super = _createSuper(NodeError);\n\n    function NodeError() {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _super.call(this);\n      Object.defineProperty(_assertThisInitialized(_this), 'message', {\n        value: getMessage.apply(_assertThisInitialized(_this), arguments),\n        writable: true,\n        configurable: true\n      }); // Add the error code to the name to include it in the stack trace.\n\n      _this.name = \"\".concat(_this.name, \" [\").concat(sym, \"]\"); // Access the stack to generate the error message including the error code\n      // from the name.\n\n      _this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n\n      delete _this.name;\n      return _this;\n    }\n\n    _createClass(NodeError, [{\n      key: \"code\",\n      get: function get() {\n        return sym;\n      },\n      set: function set(value) {\n        Object.defineProperty(this, 'code', {\n          configurable: true,\n          enumerable: true,\n          value: value,\n          writable: true\n        });\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"\".concat(this.name, \" [\").concat(sym, \"]: \").concat(this.message);\n      }\n    }]);\n\n    return NodeError;\n  }(Base);\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return \"\".concat(name, \" is outside of buffer bounds\");\n  }\n\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return \"The \\\"\".concat(name, \"\\\" argument must be of type number. Received type \").concat(_typeof(actual));\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  var msg = \"The value of \\\"\".concat(str, \"\\\" is out of range.\");\n  var received = input;\n\n  if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n\n    if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n\n    received += 'n';\n  }\n\n  msg += \" It must be \".concat(range, \". Received \").concat(received);\n  return msg;\n}, RangeError);\n\nfunction addNumericalSeparator(val) {\n  var res = '';\n  var i = val.length;\n  var start = val[0] === '-' ? 1 : 0;\n\n  for (; i >= start + 4; i -= 3) {\n    res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n  }\n\n  return \"\".concat(val.slice(0, i)).concat(res);\n} // CHECK FUNCTIONS\n// ===============\n\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\n\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    var n = typeof min === 'bigint' ? 'n' : '';\n    var range;\n\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = \">= 0\".concat(n, \" and < 2\").concat(n, \" ** \").concat((byteLength + 1) * 8).concat(n);\n      } else {\n        range = \">= -(2\".concat(n, \" ** \").concat((byteLength + 1) * 8 - 1).concat(n, \") and < 2 ** \") + \"\".concat((byteLength + 1) * 8 - 1).concat(n);\n      }\n    } else {\n      range = \">= \".concat(min).concat(n, \" and <= \").concat(max).concat(n);\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n\n  checkBounds(buf, offset, byteLength);\n}\n\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\n\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', \">= \".concat(type ? 1 : 0, \" and <= \").concat(length), value);\n} // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n  str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  var i;\n\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n} // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\n\n\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\n\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n} // Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\n\n\nvar hexSliceLookupTable = function () {\n  var alphabet = '0123456789abcdef';\n  var table = new Array(256);\n\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16;\n\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n\n  return table;\n}(); // Return not function with Error if BigInt not supported\n\n\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\n\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}\n\n//# sourceURL=webpack://tesseract.js/./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/file-type/index.js":
/*!*****************************************!*\
  !*** ./node_modules/file-type/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar _require = __webpack_require__(/*! ./util */ \"./node_modules/file-type/util.js\"),\n    multiByteIndexOf = _require.multiByteIndexOf,\n    stringToBytes = _require.stringToBytes,\n    readUInt64LE = _require.readUInt64LE,\n    tarHeaderChecksumMatches = _require.tarHeaderChecksumMatches,\n    uint8ArrayUtf8ByteString = _require.uint8ArrayUtf8ByteString;\n\nvar supported = __webpack_require__(/*! ./supported */ \"./node_modules/file-type/supported.js\");\n\nvar xpiZipFilename = stringToBytes('META-INF/mozilla.rsa');\nvar oxmlContentTypes = stringToBytes('[Content_Types].xml');\nvar oxmlRels = stringToBytes('_rels/.rels');\n\nvar fileType = function fileType(input) {\n  if (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n    throw new TypeError(\"Expected the `input` argument to be of type `Uint8Array` or `Buffer` or `ArrayBuffer`, got `\".concat(_typeof(input), \"`\"));\n  }\n\n  var buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n  if (!(buffer && buffer.length > 1)) {\n    return;\n  }\n\n  var check = function check(header, options) {\n    options = _objectSpread({\n      offset: 0\n    }, options);\n\n    for (var i = 0; i < header.length; i++) {\n      // If a bitmask is set\n      if (options.mask) {\n        // If header doesn't equal `buf` with bits masked off\n        if (header[i] !== (options.mask[i] & buffer[i + options.offset])) {\n          return false;\n        }\n      } else if (header[i] !== buffer[i + options.offset]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var checkString = function checkString(header, options) {\n    return check(stringToBytes(header), options);\n  };\n\n  if (check([0xFF, 0xD8, 0xFF])) {\n    return {\n      ext: 'jpg',\n      mime: 'image/jpeg'\n    };\n  }\n\n  if (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    // APNG format (https://wiki.mozilla.org/APNG_Specification)\n    // 1. Find the first IDAT (image data) chunk (49 44 41 54)\n    // 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n    // Offset calculated as follows:\n    // - 8 bytes: PNG signature\n    // - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n    var startIndex = 33;\n    var firstImageDataChunkIndex = buffer.findIndex(function (el, i) {\n      return i >= startIndex && buffer[i] === 0x49 && buffer[i + 1] === 0x44 && buffer[i + 2] === 0x41 && buffer[i + 3] === 0x54;\n    });\n    var sliced = buffer.subarray(startIndex, firstImageDataChunkIndex);\n\n    if (sliced.findIndex(function (el, i) {\n      return sliced[i] === 0x61 && sliced[i + 1] === 0x63 && sliced[i + 2] === 0x54 && sliced[i + 3] === 0x4C;\n    }) >= 0) {\n      return {\n        ext: 'apng',\n        mime: 'image/apng'\n      };\n    }\n\n    return {\n      ext: 'png',\n      mime: 'image/png'\n    };\n  }\n\n  if (check([0x47, 0x49, 0x46])) {\n    return {\n      ext: 'gif',\n      mime: 'image/gif'\n    };\n  }\n\n  if (check([0x57, 0x45, 0x42, 0x50], {\n    offset: 8\n  })) {\n    return {\n      ext: 'webp',\n      mime: 'image/webp'\n    };\n  }\n\n  if (check([0x46, 0x4C, 0x49, 0x46])) {\n    return {\n      ext: 'flif',\n      mime: 'image/flif'\n    };\n  } // `cr2`, `orf`, and `arw` need to be before `tif` check\n\n\n  if ((check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) && check([0x43, 0x52], {\n    offset: 8\n  })) {\n    return {\n      ext: 'cr2',\n      mime: 'image/x-canon-cr2'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n    return {\n      ext: 'orf',\n      mime: 'image/x-olympus-orf'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x2A, 0x00]) && (check([0x10, 0xFB, 0x86, 0x01], {\n    offset: 4\n  }) || check([0x08, 0x00, 0x00, 0x00], {\n    offset: 4\n  })) && // This pattern differentiates ARW from other TIFF-ish file types:\n  check([0x00, 0xFE, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01], {\n    offset: 9\n  })) {\n    return {\n      ext: 'arw',\n      mime: 'image/x-sony-arw'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00]) && (check([0x2D, 0x00, 0xFE, 0x00], {\n    offset: 8\n  }) || check([0x27, 0x00, 0xFE, 0x00], {\n    offset: 8\n  }))) {\n    return {\n      ext: 'dng',\n      mime: 'image/x-adobe-dng'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x2A, 0x00]) && check([0x1C, 0x00, 0xFE, 0x00], {\n    offset: 8\n  })) {\n    return {\n      ext: 'nef',\n      mime: 'image/x-nikon-nef'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n    return {\n      ext: 'rw2',\n      mime: 'image/x-panasonic-rw2'\n    };\n  } // `raf` is here just to keep all the raw image detectors together.\n\n\n  if (checkString('FUJIFILMCCD-RAW')) {\n    return {\n      ext: 'raf',\n      mime: 'image/x-fujifilm-raf'\n    };\n  }\n\n  if (check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) {\n    return {\n      ext: 'tif',\n      mime: 'image/tiff'\n    };\n  }\n\n  if (check([0x42, 0x4D])) {\n    return {\n      ext: 'bmp',\n      mime: 'image/bmp'\n    };\n  }\n\n  if (check([0x49, 0x49, 0xBC])) {\n    return {\n      ext: 'jxr',\n      mime: 'image/vnd.ms-photo'\n    };\n  }\n\n  if (check([0x38, 0x42, 0x50, 0x53])) {\n    return {\n      ext: 'psd',\n      mime: 'image/vnd.adobe.photoshop'\n    };\n  } // Zip-based file formats\n  // Need to be before the `zip` check\n\n\n  var zipHeader = [0x50, 0x4B, 0x3, 0x4];\n\n  if (check(zipHeader)) {\n    if (check([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {\n      offset: 30\n    })) {\n      return {\n        ext: 'epub',\n        mime: 'application/epub+zip'\n      };\n    } // Assumes signed `.xpi` from addons.mozilla.org\n\n\n    if (check(xpiZipFilename, {\n      offset: 30\n    })) {\n      return {\n        ext: 'xpi',\n        mime: 'application/x-xpinstall'\n      };\n    }\n\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.text', {\n      offset: 30\n    })) {\n      return {\n        ext: 'odt',\n        mime: 'application/vnd.oasis.opendocument.text'\n      };\n    }\n\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet', {\n      offset: 30\n    })) {\n      return {\n        ext: 'ods',\n        mime: 'application/vnd.oasis.opendocument.spreadsheet'\n      };\n    }\n\n    if (checkString('mimetypeapplication/vnd.oasis.opendocument.presentation', {\n      offset: 30\n    })) {\n      return {\n        ext: 'odp',\n        mime: 'application/vnd.oasis.opendocument.presentation'\n      };\n    } // The docx, xlsx and pptx file types extend the Office Open XML file format:\n    // https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n    // We look for:\n    // - one entry named '[Content_Types].xml' or '_rels/.rels',\n    // - one entry indicating specific type of file.\n    // MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\n\n    var zipHeaderIndex = 0; // The first zip header was already found at index 0\n\n    var oxmlFound = false;\n    var type;\n\n    do {\n      var offset = zipHeaderIndex + 30;\n\n      if (!oxmlFound) {\n        oxmlFound = check(oxmlContentTypes, {\n          offset: offset\n        }) || check(oxmlRels, {\n          offset: offset\n        });\n      }\n\n      if (!type) {\n        if (checkString('word/', {\n          offset: offset\n        })) {\n          type = {\n            ext: 'docx',\n            mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n          };\n        } else if (checkString('ppt/', {\n          offset: offset\n        })) {\n          type = {\n            ext: 'pptx',\n            mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n          };\n        } else if (checkString('xl/', {\n          offset: offset\n        })) {\n          type = {\n            ext: 'xlsx',\n            mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          };\n        }\n      }\n\n      if (oxmlFound && type) {\n        return type;\n      }\n\n      zipHeaderIndex = multiByteIndexOf(buffer, zipHeader, offset);\n    } while (zipHeaderIndex >= 0); // No more zip parts available in the buffer, but maybe we are almost certain about the type?\n\n\n    if (type) {\n      return type;\n    }\n  }\n\n  if (check([0x50, 0x4B]) && (buffer[2] === 0x3 || buffer[2] === 0x5 || buffer[2] === 0x7) && (buffer[3] === 0x4 || buffer[3] === 0x6 || buffer[3] === 0x8)) {\n    return {\n      ext: 'zip',\n      mime: 'application/zip'\n    };\n  }\n\n  if (check([0x30, 0x30, 0x30, 0x30, 0x30, 0x30], {\n    offset: 148,\n    mask: [0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8]\n  }) && // Valid tar checksum\n  tarHeaderChecksumMatches(buffer)) {\n    return {\n      ext: 'tar',\n      mime: 'application/x-tar'\n    };\n  }\n\n  if (check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) && (buffer[6] === 0x0 || buffer[6] === 0x1)) {\n    return {\n      ext: 'rar',\n      mime: 'application/x-rar-compressed'\n    };\n  }\n\n  if (check([0x1F, 0x8B, 0x8])) {\n    return {\n      ext: 'gz',\n      mime: 'application/gzip'\n    };\n  }\n\n  if (check([0x42, 0x5A, 0x68])) {\n    return {\n      ext: 'bz2',\n      mime: 'application/x-bzip2'\n    };\n  }\n\n  if (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n    return {\n      ext: '7z',\n      mime: 'application/x-7z-compressed'\n    };\n  }\n\n  if (check([0x78, 0x01])) {\n    return {\n      ext: 'dmg',\n      mime: 'application/x-apple-diskimage'\n    };\n  } // `mov` format variants\n\n\n  if (check([0x66, 0x72, 0x65, 0x65], {\n    offset: 4\n  }) || // `free`\n  check([0x6D, 0x64, 0x61, 0x74], {\n    offset: 4\n  }) || // `mdat` MJPEG\n  check([0x6D, 0x6F, 0x6F, 0x76], {\n    offset: 4\n  }) || // `moov`\n  check([0x77, 0x69, 0x64, 0x65], {\n    offset: 4\n  }) // `wide`\n  ) {\n    return {\n      ext: 'mov',\n      mime: 'video/quicktime'\n    };\n  } // File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n  // It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n  // `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n  // Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\n\n  if (check([0x66, 0x74, 0x79, 0x70], {\n    offset: 4\n  }) && // `ftyp`\n  (buffer[8] & 0x60) !== 0x00 && (buffer[9] & 0x60) !== 0x00 && (buffer[10] & 0x60) !== 0x00 && (buffer[11] & 0x60) !== 0x00 // Brand major\n  ) {\n    // They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n    // For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n    var brandMajor = uint8ArrayUtf8ByteString(buffer, 8, 12);\n\n    switch (brandMajor) {\n      case 'mif1':\n        return {\n          ext: 'heic',\n          mime: 'image/heif'\n        };\n\n      case 'msf1':\n        return {\n          ext: 'heic',\n          mime: 'image/heif-sequence'\n        };\n\n      case 'heic':\n      case 'heix':\n        return {\n          ext: 'heic',\n          mime: 'image/heic'\n        };\n\n      case 'hevc':\n      case 'hevx':\n        return {\n          ext: 'heic',\n          mime: 'image/heic-sequence'\n        };\n\n      case 'qt  ':\n        return {\n          ext: 'mov',\n          mime: 'video/quicktime'\n        };\n\n      case 'M4V ':\n      case 'M4VH':\n      case 'M4VP':\n        return {\n          ext: 'm4v',\n          mime: 'video/x-m4v'\n        };\n\n      case 'M4P ':\n        return {\n          ext: 'm4p',\n          mime: 'video/mp4'\n        };\n\n      case 'M4B ':\n        return {\n          ext: 'm4b',\n          mime: 'audio/mp4'\n        };\n\n      case 'M4A ':\n        return {\n          ext: 'm4a',\n          mime: 'audio/x-m4a'\n        };\n\n      case 'F4V ':\n        return {\n          ext: 'f4v',\n          mime: 'video/mp4'\n        };\n\n      case 'F4P ':\n        return {\n          ext: 'f4p',\n          mime: 'video/mp4'\n        };\n\n      case 'F4A ':\n        return {\n          ext: 'f4a',\n          mime: 'audio/mp4'\n        };\n\n      case 'F4B ':\n        return {\n          ext: 'f4b',\n          mime: 'audio/mp4'\n        };\n\n      default:\n        if (brandMajor.startsWith('3g')) {\n          if (brandMajor.startsWith('3g2')) {\n            return {\n              ext: '3g2',\n              mime: 'video/3gpp2'\n            };\n          }\n\n          return {\n            ext: '3gp',\n            mime: 'video/3gpp'\n          };\n        }\n\n        return {\n          ext: 'mp4',\n          mime: 'video/mp4'\n        };\n    }\n  }\n\n  if (check([0x4D, 0x54, 0x68, 0x64])) {\n    return {\n      ext: 'mid',\n      mime: 'audio/midi'\n    };\n  } // https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\n\n  if (check([0x1A, 0x45, 0xDF, 0xA3])) {\n    var _sliced = buffer.subarray(4, 4 + 4096);\n\n    var idPos = _sliced.findIndex(function (el, i, arr) {\n      return arr[i] === 0x42 && arr[i + 1] === 0x82;\n    });\n\n    if (idPos !== -1) {\n      var docTypePos = idPos + 3;\n\n      var findDocType = function findDocType(type) {\n        return _toConsumableArray(type).every(function (c, i) {\n          return _sliced[docTypePos + i] === c.charCodeAt(0);\n        });\n      };\n\n      if (findDocType('matroska')) {\n        return {\n          ext: 'mkv',\n          mime: 'video/x-matroska'\n        };\n      }\n\n      if (findDocType('webm')) {\n        return {\n          ext: 'webm',\n          mime: 'video/webm'\n        };\n      }\n    }\n  } // RIFF file format which might be AVI, WAV, QCP, etc\n\n\n  if (check([0x52, 0x49, 0x46, 0x46])) {\n    if (check([0x41, 0x56, 0x49], {\n      offset: 8\n    })) {\n      return {\n        ext: 'avi',\n        mime: 'video/vnd.avi'\n      };\n    }\n\n    if (check([0x57, 0x41, 0x56, 0x45], {\n      offset: 8\n    })) {\n      return {\n        ext: 'wav',\n        mime: 'audio/vnd.wave'\n      };\n    } // QLCM, QCP file\n\n\n    if (check([0x51, 0x4C, 0x43, 0x4D], {\n      offset: 8\n    })) {\n      return {\n        ext: 'qcp',\n        mime: 'audio/qcelp'\n      };\n    }\n  } // ASF_Header_Object first 80 bytes\n\n\n  if (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n    // Search for header should be in first 1KB of file.\n    var _offset = 30;\n\n    do {\n      var objectSize = readUInt64LE(buffer, _offset + 16);\n\n      if (check([0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65], {\n        offset: _offset\n      })) {\n        // Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n        if (check([0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {\n          offset: _offset + 24\n        })) {\n          // Found audio:\n          return {\n            ext: 'wma',\n            mime: 'audio/x-ms-wma'\n          };\n        }\n\n        if (check([0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {\n          offset: _offset + 24\n        })) {\n          // Found video:\n          return {\n            ext: 'wmv',\n            mime: 'video/x-ms-asf'\n          };\n        }\n\n        break;\n      }\n\n      _offset += objectSize;\n    } while (_offset + 24 <= buffer.length); // Default to ASF generic extension\n\n\n    return {\n      ext: 'asf',\n      mime: 'application/vnd.ms-asf'\n    };\n  }\n\n  if (check([0x0, 0x0, 0x1, 0xBA]) || check([0x0, 0x0, 0x1, 0xB3])) {\n    return {\n      ext: 'mpg',\n      mime: 'video/mpeg'\n    };\n  } // Check for MPEG header at different starting offsets\n\n\n  for (var start = 0; start < 2 && start < buffer.length - 16; start++) {\n    if (check([0x49, 0x44, 0x33], {\n      offset: start\n    }) || // ID3 header\n    check([0xFF, 0xE2], {\n      offset: start,\n      mask: [0xFF, 0xE6]\n    }) // MPEG 1 or 2 Layer 3 header\n    ) {\n      return {\n        ext: 'mp3',\n        mime: 'audio/mpeg'\n      };\n    }\n\n    if (check([0xFF, 0xE4], {\n      offset: start,\n      mask: [0xFF, 0xE6]\n    }) // MPEG 1 or 2 Layer 2 header\n    ) {\n      return {\n        ext: 'mp2',\n        mime: 'audio/mpeg'\n      };\n    }\n\n    if (check([0xFF, 0xF8], {\n      offset: start,\n      mask: [0xFF, 0xFC]\n    }) // MPEG 2 layer 0 using ADTS\n    ) {\n      return {\n        ext: 'mp2',\n        mime: 'audio/mpeg'\n      };\n    }\n\n    if (check([0xFF, 0xF0], {\n      offset: start,\n      mask: [0xFF, 0xFC]\n    }) // MPEG 4 layer 0 using ADTS\n    ) {\n      return {\n        ext: 'mp4',\n        mime: 'audio/mpeg'\n      };\n    }\n  } // Needs to be before `ogg` check\n\n\n  if (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {\n    offset: 28\n  })) {\n    return {\n      ext: 'opus',\n      mime: 'audio/opus'\n    };\n  } // If 'OggS' in first  bytes, then OGG container\n\n\n  if (check([0x4F, 0x67, 0x67, 0x53])) {\n    // This is a OGG container\n    // If ' theora' in header.\n    if (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogv',\n        mime: 'video/ogg'\n      };\n    } // If '\\x01video' in header.\n\n\n    if (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogm',\n        mime: 'video/ogg'\n      };\n    } // If ' FLAC' in header  https://xiph.org/flac/faq.html\n\n\n    if (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {\n      offset: 28\n    })) {\n      return {\n        ext: 'oga',\n        mime: 'audio/ogg'\n      };\n    } // 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\n\n    if (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {\n      offset: 28\n    })) {\n      return {\n        ext: 'spx',\n        mime: 'audio/ogg'\n      };\n    } // If '\\x01vorbis' in header\n\n\n    if (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {\n      offset: 28\n    })) {\n      return {\n        ext: 'ogg',\n        mime: 'audio/ogg'\n      };\n    } // Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\n\n    return {\n      ext: 'ogx',\n      mime: 'application/ogg'\n    };\n  }\n\n  if (check([0x66, 0x4C, 0x61, 0x43])) {\n    return {\n      ext: 'flac',\n      mime: 'audio/x-flac'\n    };\n  }\n\n  if (check([0x4D, 0x41, 0x43, 0x20])) {\n    // 'MAC '\n    return {\n      ext: 'ape',\n      mime: 'audio/ape'\n    };\n  }\n\n  if (check([0x77, 0x76, 0x70, 0x6B])) {\n    // 'wvpk'\n    return {\n      ext: 'wv',\n      mime: 'audio/wavpack'\n    };\n  }\n\n  if (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\n    return {\n      ext: 'amr',\n      mime: 'audio/amr'\n    };\n  }\n\n  if (check([0x25, 0x50, 0x44, 0x46])) {\n    return {\n      ext: 'pdf',\n      mime: 'application/pdf'\n    };\n  }\n\n  if (check([0x4D, 0x5A])) {\n    return {\n      ext: 'exe',\n      mime: 'application/x-msdownload'\n    };\n  }\n\n  if ((buffer[0] === 0x43 || buffer[0] === 0x46) && check([0x57, 0x53], {\n    offset: 1\n  })) {\n    return {\n      ext: 'swf',\n      mime: 'application/x-shockwave-flash'\n    };\n  }\n\n  if (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\n    return {\n      ext: 'rtf',\n      mime: 'application/rtf'\n    };\n  }\n\n  if (check([0x00, 0x61, 0x73, 0x6D])) {\n    return {\n      ext: 'wasm',\n      mime: 'application/wasm'\n    };\n  }\n\n  if (check([0x77, 0x4F, 0x46, 0x46]) && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || check([0x4F, 0x54, 0x54, 0x4F], {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff',\n      mime: 'font/woff'\n    };\n  }\n\n  if (check([0x77, 0x4F, 0x46, 0x32]) && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || check([0x4F, 0x54, 0x54, 0x4F], {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff2',\n      mime: 'font/woff2'\n    };\n  }\n\n  if (check([0x4C, 0x50], {\n    offset: 34\n  }) && (check([0x00, 0x00, 0x01], {\n    offset: 8\n  }) || check([0x01, 0x00, 0x02], {\n    offset: 8\n  }) || check([0x02, 0x00, 0x02], {\n    offset: 8\n  }))) {\n    return {\n      ext: 'eot',\n      mime: 'application/vnd.ms-fontobject'\n    };\n  }\n\n  if (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'ttf',\n      mime: 'font/ttf'\n    };\n  }\n\n  if (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n    return {\n      ext: 'otf',\n      mime: 'font/otf'\n    };\n  }\n\n  if (check([0x00, 0x00, 0x01, 0x00])) {\n    return {\n      ext: 'ico',\n      mime: 'image/x-icon'\n    };\n  }\n\n  if (check([0x00, 0x00, 0x02, 0x00])) {\n    return {\n      ext: 'cur',\n      mime: 'image/x-icon'\n    };\n  }\n\n  if (check([0x46, 0x4C, 0x56, 0x01])) {\n    return {\n      ext: 'flv',\n      mime: 'video/x-flv'\n    };\n  }\n\n  if (check([0x25, 0x21])) {\n    return {\n      ext: 'ps',\n      mime: 'application/postscript'\n    };\n  }\n\n  if (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n    return {\n      ext: 'xz',\n      mime: 'application/x-xz'\n    };\n  }\n\n  if (check([0x53, 0x51, 0x4C, 0x69])) {\n    return {\n      ext: 'sqlite',\n      mime: 'application/x-sqlite3'\n    };\n  }\n\n  if (check([0x4E, 0x45, 0x53, 0x1A])) {\n    return {\n      ext: 'nes',\n      mime: 'application/x-nintendo-nes-rom'\n    };\n  }\n\n  if (check([0x43, 0x72, 0x32, 0x34])) {\n    return {\n      ext: 'crx',\n      mime: 'application/x-google-chrome-extension'\n    };\n  }\n\n  if (check([0x4D, 0x53, 0x43, 0x46]) || check([0x49, 0x53, 0x63, 0x28])) {\n    return {\n      ext: 'cab',\n      mime: 'application/vnd.ms-cab-compressed'\n    };\n  } // Needs to be before `ar` check\n\n\n  if (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\n    return {\n      ext: 'deb',\n      mime: 'application/x-deb'\n    };\n  }\n\n  if (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\n    return {\n      ext: 'ar',\n      mime: 'application/x-unix-archive'\n    };\n  }\n\n  if (check([0xED, 0xAB, 0xEE, 0xDB])) {\n    return {\n      ext: 'rpm',\n      mime: 'application/x-rpm'\n    };\n  }\n\n  if (check([0x1F, 0xA0]) || check([0x1F, 0x9D])) {\n    return {\n      ext: 'Z',\n      mime: 'application/x-compress'\n    };\n  }\n\n  if (check([0x4C, 0x5A, 0x49, 0x50])) {\n    return {\n      ext: 'lz',\n      mime: 'application/x-lzip'\n    };\n  }\n\n  if (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E])) {\n    return {\n      ext: 'msi',\n      mime: 'application/x-msi'\n    };\n  }\n\n  if (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n    return {\n      ext: 'mxf',\n      mime: 'application/mxf'\n    };\n  }\n\n  if (check([0x47], {\n    offset: 4\n  }) && (check([0x47], {\n    offset: 192\n  }) || check([0x47], {\n    offset: 196\n  }))) {\n    return {\n      ext: 'mts',\n      mime: 'video/mp2t'\n    };\n  }\n\n  if (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\n    return {\n      ext: 'blend',\n      mime: 'application/x-blender'\n    };\n  }\n\n  if (check([0x42, 0x50, 0x47, 0xFB])) {\n    return {\n      ext: 'bpg',\n      mime: 'image/bpg'\n    };\n  }\n\n  if (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n    // JPEG-2000 family\n    if (check([0x6A, 0x70, 0x32, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jp2',\n        mime: 'image/jp2'\n      };\n    }\n\n    if (check([0x6A, 0x70, 0x78, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jpx',\n        mime: 'image/jpx'\n      };\n    }\n\n    if (check([0x6A, 0x70, 0x6D, 0x20], {\n      offset: 20\n    })) {\n      return {\n        ext: 'jpm',\n        mime: 'image/jpm'\n      };\n    }\n\n    if (check([0x6D, 0x6A, 0x70, 0x32], {\n      offset: 20\n    })) {\n      return {\n        ext: 'mj2',\n        mime: 'image/mj2'\n      };\n    }\n  }\n\n  if (check([0x46, 0x4F, 0x52, 0x4D])) {\n    return {\n      ext: 'aif',\n      mime: 'audio/aiff'\n    };\n  }\n\n  if (checkString('<?xml ')) {\n    return {\n      ext: 'xml',\n      mime: 'application/xml'\n    };\n  }\n\n  if (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {\n    offset: 60\n  })) {\n    return {\n      ext: 'mobi',\n      mime: 'application/x-mobipocket-ebook'\n    };\n  }\n\n  if (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    return {\n      ext: 'ktx',\n      mime: 'image/ktx'\n    };\n  }\n\n  if (check([0x44, 0x49, 0x43, 0x4D], {\n    offset: 128\n  })) {\n    return {\n      ext: 'dcm',\n      mime: 'application/dicom'\n    };\n  } // Musepack, SV7\n\n\n  if (check([0x4D, 0x50, 0x2B])) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  } // Musepack, SV8\n\n\n  if (check([0x4D, 0x50, 0x43, 0x4B])) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  }\n\n  if (check([0x42, 0x45, 0x47, 0x49, 0x4E, 0x3A])) {\n    return {\n      ext: 'ics',\n      mime: 'text/calendar'\n    };\n  }\n\n  if (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'glb',\n      mime: 'model/gltf-binary'\n    };\n  }\n\n  if (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n    return {\n      ext: 'pcap',\n      mime: 'application/vnd.tcpdump.pcap'\n    };\n  } // Sony DSD Stream File (DSF)\n\n\n  if (check([0x44, 0x53, 0x44, 0x20])) {\n    return {\n      ext: 'dsf',\n      mime: 'audio/x-dsf' // Non-standard\n\n    };\n  }\n\n  if (check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n    return {\n      ext: 'lnk',\n      mime: 'application/x.ms.shortcut' // Invented by us\n\n    };\n  }\n\n  if (check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'alias',\n      mime: 'application/x.apple.alias' // Invented by us\n\n    };\n  }\n\n  if (checkString('Creative Voice File')) {\n    return {\n      ext: 'voc',\n      mime: 'audio/x-voc'\n    };\n  }\n\n  if (check([0x0B, 0x77])) {\n    return {\n      ext: 'ac3',\n      mime: 'audio/vnd.dolby.dd-raw'\n    };\n  }\n\n  if ((check([0x7E, 0x10, 0x04]) || check([0x7E, 0x18, 0x04])) && check([0x30, 0x4D, 0x49, 0x45], {\n    offset: 4\n  })) {\n    return {\n      ext: 'mie',\n      mime: 'application/x-mie'\n    };\n  }\n\n  if (check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n    return {\n      ext: 'arrow',\n      mime: 'application/x-apache-arrow'\n    };\n  }\n\n  if (check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {\n    offset: 2\n  })) {\n    return {\n      ext: 'shp',\n      mime: 'application/x-esri-shape'\n    };\n  }\n};\n\nmodule.exports = fileType;\nObject.defineProperty(fileType, 'minimumBytes', {\n  value: 4100\n});\n\nfileType.stream = function (readableStream) {\n  return new Promise(function (resolve, reject) {\n    // Using `eval` to work around issues when bundling with Webpack\n    var stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n    readableStream.on('error', reject);\n    readableStream.once('readable', function () {\n      var pass = new stream.PassThrough();\n      var chunk = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n\n      try {\n        pass.fileType = fileType(chunk);\n      } catch (error) {\n        reject(error);\n      }\n\n      readableStream.unshift(chunk);\n\n      if (stream.pipeline) {\n        resolve(stream.pipeline(readableStream, pass, function () {}));\n      } else {\n        resolve(readableStream.pipe(pass));\n      }\n    });\n  });\n};\n\nObject.defineProperty(fileType, 'extensions', {\n  get: function get() {\n    return new Set(supported.extensions);\n  }\n});\nObject.defineProperty(fileType, 'mimeTypes', {\n  get: function get() {\n    return new Set(supported.mimeTypes);\n  }\n});\n\n//# sourceURL=webpack://tesseract.js/./node_modules/file-type/index.js?");

/***/ }),

/***/ "./node_modules/file-type/supported.js":
/*!*********************************************!*\
  !*** ./node_modules/file-type/supported.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = {\n  extensions: ['jpg', 'png', 'apng', 'gif', 'webp', 'flif', 'cr2', 'orf', 'arw', 'dng', 'nef', 'rw2', 'raf', 'tif', 'bmp', 'jxr', 'psd', 'zip', 'tar', 'rar', 'gz', 'bz2', '7z', 'dmg', 'mp4', 'mid', 'mkv', 'webm', 'mov', 'avi', 'mpg', 'mp2', 'mp3', 'm4a', 'oga', 'ogg', 'ogv', 'opus', 'flac', 'wav', 'spx', 'amr', 'pdf', 'epub', 'exe', 'swf', 'rtf', 'wasm', 'woff', 'woff2', 'eot', 'ttf', 'otf', 'ico', 'flv', 'ps', 'xz', 'sqlite', 'nes', 'crx', 'xpi', 'cab', 'deb', 'ar', 'rpm', 'Z', 'lz', 'msi', 'mxf', 'mts', 'blend', 'bpg', 'docx', 'pptx', 'xlsx', '3gp', '3g2', 'jp2', 'jpm', 'jpx', 'mj2', 'aif', 'qcp', 'odt', 'ods', 'odp', 'xml', 'mobi', 'heic', 'cur', 'ktx', 'ape', 'wv', 'wmv', 'wma', 'dcm', 'ics', 'glb', 'pcap', 'dsf', 'lnk', 'alias', 'voc', 'ac3', 'm4v', 'm4p', 'm4b', 'f4v', 'f4p', 'f4b', 'f4a', 'mie', 'asf', 'ogm', 'ogx', 'mpc', 'arrow', 'shp'],\n  mimeTypes: ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/flif', 'image/x-canon-cr2', 'image/tiff', 'image/bmp', 'image/vnd.ms-photo', 'image/vnd.adobe.photoshop', 'application/epub+zip', 'application/x-xpinstall', 'application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.presentation', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/x-tar', 'application/x-rar-compressed', 'application/gzip', 'application/x-bzip2', 'application/x-7z-compressed', 'application/x-apple-diskimage', 'application/x-apache-arrow', 'video/mp4', 'audio/midi', 'video/x-matroska', 'video/webm', 'video/quicktime', 'video/vnd.avi', 'audio/vnd.wave', 'audio/qcelp', 'audio/x-ms-wma', 'video/x-ms-asf', 'application/vnd.ms-asf', 'video/mpeg', 'video/3gpp', 'audio/mpeg', 'audio/mp4', // RFC 4337\n  'audio/opus', 'video/ogg', 'audio/ogg', 'application/ogg', 'audio/x-flac', 'audio/ape', 'audio/wavpack', 'audio/amr', 'application/pdf', 'application/x-msdownload', 'application/x-shockwave-flash', 'application/rtf', 'application/wasm', 'font/woff', 'font/woff2', 'application/vnd.ms-fontobject', 'font/ttf', 'font/otf', 'image/x-icon', 'video/x-flv', 'application/postscript', 'application/x-xz', 'application/x-sqlite3', 'application/x-nintendo-nes-rom', 'application/x-google-chrome-extension', 'application/vnd.ms-cab-compressed', 'application/x-deb', 'application/x-unix-archive', 'application/x-rpm', 'application/x-compress', 'application/x-lzip', 'application/x-msi', 'application/x-mie', 'application/mxf', 'video/mp2t', 'application/x-blender', 'image/bpg', 'image/jp2', 'image/jpx', 'image/jpm', 'image/mj2', 'audio/aiff', 'application/xml', 'application/x-mobipocket-ebook', 'image/heif', 'image/heif-sequence', 'image/heic', 'image/heic-sequence', 'image/ktx', 'application/dicom', 'audio/x-musepack', 'text/calendar', 'model/gltf-binary', 'application/vnd.tcpdump.pcap', 'audio/x-dsf', // Non-standard\n  'application/x.ms.shortcut', // Invented by us\n  'application/x.apple.alias', // Invented by us\n  'audio/x-voc', 'audio/vnd.dolby.dd-raw', 'audio/x-m4a', 'image/apng', 'image/x-olympus-orf', 'image/x-sony-arw', 'image/x-adobe-dng', 'image/x-nikon-nef', 'image/x-panasonic-rw2', 'image/x-fujifilm-raf', 'video/x-m4v', 'video/3gpp2', 'application/x-esri-shape']\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/file-type/supported.js?");

/***/ }),

/***/ "./node_modules/file-type/util.js":
/*!****************************************!*\
  !*** ./node_modules/file-type/util.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexports.stringToBytes = function (string) {\n  return _toConsumableArray(string).map(function (character) {\n    return character.charCodeAt(0);\n  });\n};\n\nvar uint8ArrayUtf8ByteString = function uint8ArrayUtf8ByteString(array, start, end) {\n  return String.fromCharCode.apply(String, _toConsumableArray(array.slice(start, end)));\n};\n\nexports.readUInt64LE = function (buffer) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var n = buffer[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < 8) {\n    mul *= 0x100;\n    n += buffer[offset + i] * mul;\n  }\n\n  return n;\n};\n\nexports.tarHeaderChecksumMatches = function (buffer) {\n  // Does not check if checksum field characters are valid\n  if (buffer.length < 512) {\n    // `tar` header size, cannot compute checksum without it\n    return false;\n  }\n\n  var MASK_8TH_BIT = 0x80;\n  var sum = 256; // Intitalize sum, with 256 as sum of 8 spaces in checksum field\n\n  var signedBitSum = 0; // Initialize signed bit sum\n\n  for (var i = 0; i < 148; i++) {\n    var byte = buffer[i];\n    sum += byte;\n    signedBitSum += byte & MASK_8TH_BIT; // Add signed bit to signed bit sum\n  } // Skip checksum field\n\n\n  for (var _i = 156; _i < 512; _i++) {\n    var _byte = buffer[_i];\n    sum += _byte;\n    signedBitSum += _byte & MASK_8TH_BIT; // Add signed bit to signed bit sum\n  }\n\n  var readSum = parseInt(uint8ArrayUtf8ByteString(buffer, 148, 154), 8); // Read sum in header\n  // Some implementations compute checksum incorrectly using signed bytes\n\n  return (// Checksum in header equals the sum we calculated\n    readSum === sum || // Checksum in header equals sum we calculated plus signed-to-unsigned delta\n    readSum === sum - (signedBitSum << 1)\n  );\n};\n\nexports.multiByteIndexOf = function (buffer, bytesToSearch) {\n  var startAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  // `Buffer#indexOf()` can search for multiple bytes\n  if (Buffer && Buffer.isBuffer(buffer)) {\n    return buffer.indexOf(Buffer.from(bytesToSearch), startAt);\n  }\n\n  var nextBytesMatch = function nextBytesMatch(buffer, bytes, startIndex) {\n    for (var i = 1; i < bytes.length; i++) {\n      if (bytes[i] !== buffer[startIndex + i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // `Uint8Array#indexOf()` can search for only a single byte\n\n\n  var index = buffer.indexOf(bytesToSearch[0], startAt);\n\n  while (index >= 0) {\n    if (nextBytesMatch(buffer, bytesToSearch, index)) {\n      return index;\n    }\n\n    index = buffer.indexOf(bytesToSearch[0], index + 1);\n  }\n\n  return -1;\n};\n\nexports.uint8ArrayUtf8ByteString = uint8ArrayUtf8ByteString;\n\n//# sourceURL=webpack://tesseract.js/./node_modules/file-type/util.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/is-electron/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-electron/index.js ***!
  \*******************************************/
/***/ ((module) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n  // Renderer process\n  if (typeof window !== 'undefined' && _typeof(window.process) === 'object' && window.process.type === 'renderer') {\n    return true;\n  } // Main process\n\n\n  if (typeof process !== 'undefined' && _typeof(process.versions) === 'object' && !!process.versions.electron) {\n    return true;\n  } // Detect the user agent when the `nodeIntegration` option is set to true\n\n\n  if ((typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isElectron;\n\n//# sourceURL=webpack://tesseract.js/./node_modules/is-electron/index.js?");

/***/ }),

/***/ "./node_modules/is-url/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-url/index.js ***!
  \**************************************/
/***/ ((module) => {

eval("/**\n * Expose `isUrl`.\n */\nmodule.exports = isUrl;\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/;\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string) {\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) || nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n\n//# sourceURL=webpack://tesseract.js/./node_modules/is-url/index.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n( false ? 0 : _typeof(module)) === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if ((typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n\n//# sourceURL=webpack://tesseract.js/./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/wasm-feature-detect/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/wasm-feature-detect/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bigInt\": () => (/* binding */ bigInt),\n/* harmony export */   \"bulkMemory\": () => (/* binding */ bulkMemory),\n/* harmony export */   \"exceptions\": () => (/* binding */ exceptions),\n/* harmony export */   \"multiValue\": () => (/* binding */ multiValue),\n/* harmony export */   \"mutableGlobals\": () => (/* binding */ mutableGlobals),\n/* harmony export */   \"referenceTypes\": () => (/* binding */ referenceTypes),\n/* harmony export */   \"saturatedFloatToInt\": () => (/* binding */ saturatedFloatToInt),\n/* harmony export */   \"signExtensions\": () => (/* binding */ signExtensions),\n/* harmony export */   \"simd\": () => (/* binding */ simd),\n/* harmony export */   \"tailCall\": () => (/* binding */ tailCall),\n/* harmony export */   \"threads\": () => (/* binding */ threads)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar bigInt = function bigInt() {\n  return function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return WebAssembly.instantiate(e);\n\n            case 3:\n              _context.t0 = _context.sent.instance.exports.b(BigInt(0));\n              _context.t1 = BigInt(0);\n              return _context.abrupt(\"return\", _context.t0 === _context.t1);\n\n            case 8:\n              _context.prev = 8;\n              _context.t2 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", !1);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 6, 1, 96, 1, 126, 1, 126, 3, 2, 1, 0, 7, 5, 1, 1, 98, 0, 0, 10, 6, 1, 4, 0, 32, 0, 11]));\n},\n    bulkMemory = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 3, 1, 0, 1, 10, 14, 1, 12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11])));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function bulkMemory() {\n    return _ref2.apply(this, arguments);\n  };\n}(),\n    exceptions = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 8, 1, 6, 0, 6, 64, 25, 11, 11])));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function exceptions() {\n    return _ref3.apply(this, arguments);\n  };\n}(),\n    multiValue = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 6, 1, 96, 0, 2, 127, 127, 3, 2, 1, 0, 10, 8, 1, 6, 0, 65, 0, 65, 0, 11])));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function multiValue() {\n    return _ref4.apply(this, arguments);\n  };\n}(),\n    mutableGlobals = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 2, 8, 1, 1, 97, 1, 98, 3, 127, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 5, 1, 1, 97, 3, 1])));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function mutableGlobals() {\n    return _ref5.apply(this, arguments);\n  };\n}(),\n    referenceTypes = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 7, 1, 5, 0, 208, 112, 26, 11])));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function referenceTypes() {\n    return _ref6.apply(this, arguments);\n  };\n}(),\n    saturatedFloatToInt = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 12, 1, 10, 0, 67, 0, 0, 0, 0, 252, 0, 26, 11])));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function saturatedFloatToInt() {\n    return _ref7.apply(this, arguments);\n  };\n}(),\n    signExtensions = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 8, 1, 6, 0, 65, 0, 192, 26, 11])));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function signExtensions() {\n    return _ref8.apply(this, arguments);\n  };\n}(),\n    simd = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11])));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function simd() {\n    return _ref9.apply(this, arguments);\n  };\n}(),\n    tailCall = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 6, 1, 4, 0, 18, 0, 11])));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function tailCall() {\n    return _ref10.apply(this, arguments);\n  };\n}(),\n    threads = function threads() {\n  return function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              return _context11.abrupt(\"return\", (\"undefined\" != typeof MessageChannel && new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), WebAssembly.validate(e)));\n\n            case 4:\n              _context11.prev = 4;\n              _context11.t0 = _context11[\"catch\"](0);\n              return _context11.abrupt(\"return\", !1);\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 4]]);\n    }));\n\n    return function (_x2) {\n      return _ref11.apply(this, arguments);\n    };\n  }()(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));\n};\n\n//# sourceURL=webpack://tesseract.js/./node_modules/wasm-feature-detect/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/zlibjs/bin/node-zlib.js":
/*!**********************************************!*\
  !*** ./node_modules/zlibjs/bin/node-zlib.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */\n(function () {\n  'use strict';\n\n  function q(b) {\n    throw b;\n  }\n\n  var t = void 0,\n      v = !0;\n  var B = \"undefined\" !== typeof Uint8Array && \"undefined\" !== typeof Uint16Array && \"undefined\" !== typeof Uint32Array && \"undefined\" !== typeof DataView;\n\n  function G(b, a) {\n    this.index = \"number\" === typeof a ? a : 0;\n    this.m = 0;\n    this.buffer = b instanceof (B ? Uint8Array : Array) ? b : new (B ? Uint8Array : Array)(32768);\n    2 * this.buffer.length <= this.index && q(Error(\"invalid index\"));\n    this.buffer.length <= this.index && this.f();\n  }\n\n  G.prototype.f = function () {\n    var b = this.buffer,\n        a,\n        c = b.length,\n        d = new (B ? Uint8Array : Array)(c << 1);\n    if (B) d.set(b);else for (a = 0; a < c; ++a) {\n      d[a] = b[a];\n    }\n    return this.buffer = d;\n  };\n\n  G.prototype.d = function (b, a, c) {\n    var d = this.buffer,\n        e = this.index,\n        f = this.m,\n        g = d[e],\n        k;\n    c && 1 < a && (b = 8 < a ? (I[b & 255] << 24 | I[b >>> 8 & 255] << 16 | I[b >>> 16 & 255] << 8 | I[b >>> 24 & 255]) >> 32 - a : I[b] >> 8 - a);\n    if (8 > a + f) g = g << a | b, f += a;else for (k = 0; k < a; ++k) {\n      g = g << 1 | b >> a - k - 1 & 1, 8 === ++f && (f = 0, d[e++] = I[g], g = 0, e === d.length && (d = this.f()));\n    }\n    d[e] = g;\n    this.buffer = d;\n    this.m = f;\n    this.index = e;\n  };\n\n  G.prototype.finish = function () {\n    var b = this.buffer,\n        a = this.index,\n        c;\n    0 < this.m && (b[a] <<= 8 - this.m, b[a] = I[b[a]], a++);\n    B ? c = b.subarray(0, a) : (b.length = a, c = b);\n    return c;\n  };\n\n  var aa = new (B ? Uint8Array : Array)(256),\n      L;\n\n  for (L = 0; 256 > L; ++L) {\n    for (var R = L, ba = R, ca = 7, R = R >>> 1; R; R >>>= 1) {\n      ba <<= 1, ba |= R & 1, --ca;\n    }\n\n    aa[L] = (ba << ca & 255) >>> 0;\n  }\n\n  var I = aa;\n\n  function ha(b, a, c) {\n    var d,\n        e = \"number\" === typeof a ? a : a = 0,\n        f = \"number\" === typeof c ? c : b.length;\n    d = -1;\n\n    for (e = f & 7; e--; ++a) {\n      d = d >>> 8 ^ S[(d ^ b[a]) & 255];\n    }\n\n    for (e = f >> 3; e--; a += 8) {\n      d = d >>> 8 ^ S[(d ^ b[a]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 1]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 2]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 3]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 4]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 5]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 6]) & 255], d = d >>> 8 ^ S[(d ^ b[a + 7]) & 255];\n    }\n\n    return (d ^ 4294967295) >>> 0;\n  }\n\n  var ia = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918E3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117],\n      S = B ? new Uint32Array(ia) : ia;\n\n  function ja() {}\n\n  ;\n\n  function ka(b) {\n    this.buffer = new (B ? Uint16Array : Array)(2 * b);\n    this.length = 0;\n  }\n\n  ka.prototype.getParent = function (b) {\n    return 2 * ((b - 2) / 4 | 0);\n  };\n\n  ka.prototype.push = function (b, a) {\n    var c,\n        d,\n        e = this.buffer,\n        f;\n    c = this.length;\n    e[this.length++] = a;\n\n    for (e[this.length++] = b; 0 < c;) {\n      if (d = this.getParent(c), e[c] > e[d]) f = e[c], e[c] = e[d], e[d] = f, f = e[c + 1], e[c + 1] = e[d + 1], e[d + 1] = f, c = d;else break;\n    }\n\n    return this.length;\n  };\n\n  ka.prototype.pop = function () {\n    var b,\n        a,\n        c = this.buffer,\n        d,\n        e,\n        f;\n    a = c[0];\n    b = c[1];\n    this.length -= 2;\n    c[0] = c[this.length];\n    c[1] = c[this.length + 1];\n\n    for (f = 0;;) {\n      e = 2 * f + 2;\n      if (e >= this.length) break;\n      e + 2 < this.length && c[e + 2] > c[e] && (e += 2);\n      if (c[e] > c[f]) d = c[f], c[f] = c[e], c[e] = d, d = c[f + 1], c[f + 1] = c[e + 1], c[e + 1] = d;else break;\n      f = e;\n    }\n\n    return {\n      index: b,\n      value: a,\n      length: this.length\n    };\n  };\n\n  function T(b) {\n    var a = b.length,\n        c = 0,\n        d = Number.POSITIVE_INFINITY,\n        e,\n        f,\n        g,\n        k,\n        h,\n        m,\n        r,\n        p,\n        l,\n        n;\n\n    for (p = 0; p < a; ++p) {\n      b[p] > c && (c = b[p]), b[p] < d && (d = b[p]);\n    }\n\n    e = 1 << c;\n    f = new (B ? Uint32Array : Array)(e);\n    g = 1;\n    k = 0;\n\n    for (h = 2; g <= c;) {\n      for (p = 0; p < a; ++p) {\n        if (b[p] === g) {\n          m = 0;\n          r = k;\n\n          for (l = 0; l < g; ++l) {\n            m = m << 1 | r & 1, r >>= 1;\n          }\n\n          n = g << 16 | p;\n\n          for (l = m; l < e; l += h) {\n            f[l] = n;\n          }\n\n          ++k;\n        }\n      }\n\n      ++g;\n      k <<= 1;\n      h <<= 1;\n    }\n\n    return [f, c, d];\n  }\n\n  ;\n\n  function na(b, a) {\n    this.k = oa;\n    this.F = 0;\n    this.input = B && b instanceof Array ? new Uint8Array(b) : b;\n    this.b = 0;\n    a && (a.lazy && (this.F = a.lazy), \"number\" === typeof a.compressionType && (this.k = a.compressionType), a.outputBuffer && (this.a = B && a.outputBuffer instanceof Array ? new Uint8Array(a.outputBuffer) : a.outputBuffer), \"number\" === typeof a.outputIndex && (this.b = a.outputIndex));\n    this.a || (this.a = new (B ? Uint8Array : Array)(32768));\n  }\n\n  var oa = 2,\n      pa = {\n    NONE: 0,\n    L: 1,\n    t: oa,\n    X: 3\n  },\n      qa = [],\n      U;\n\n  for (U = 0; 288 > U; U++) {\n    switch (v) {\n      case 143 >= U:\n        qa.push([U + 48, 8]);\n        break;\n\n      case 255 >= U:\n        qa.push([U - 144 + 400, 9]);\n        break;\n\n      case 279 >= U:\n        qa.push([U - 256 + 0, 7]);\n        break;\n\n      case 287 >= U:\n        qa.push([U - 280 + 192, 8]);\n        break;\n\n      default:\n        q(\"invalid literal: \" + U);\n    }\n  }\n\n  na.prototype.h = function () {\n    var b,\n        a,\n        c,\n        d,\n        e = this.input;\n\n    switch (this.k) {\n      case 0:\n        c = 0;\n\n        for (d = e.length; c < d;) {\n          a = B ? e.subarray(c, c + 65535) : e.slice(c, c + 65535);\n          c += a.length;\n          var f = a,\n              g = c === d,\n              k = t,\n              h = t,\n              m = t,\n              r = t,\n              p = t,\n              l = this.a,\n              n = this.b;\n\n          if (B) {\n            for (l = new Uint8Array(this.a.buffer); l.length <= n + f.length + 5;) {\n              l = new Uint8Array(l.length << 1);\n            }\n\n            l.set(this.a);\n          }\n\n          k = g ? 1 : 0;\n          l[n++] = k | 0;\n          h = f.length;\n          m = ~h + 65536 & 65535;\n          l[n++] = h & 255;\n          l[n++] = h >>> 8 & 255;\n          l[n++] = m & 255;\n          l[n++] = m >>> 8 & 255;\n          if (B) l.set(f, n), n += f.length, l = l.subarray(0, n);else {\n            r = 0;\n\n            for (p = f.length; r < p; ++r) {\n              l[n++] = f[r];\n            }\n\n            l.length = n;\n          }\n          this.b = n;\n          this.a = l;\n        }\n\n        break;\n\n      case 1:\n        var s = new G(B ? new Uint8Array(this.a.buffer) : this.a, this.b);\n        s.d(1, 1, v);\n        s.d(1, 2, v);\n        var u = ra(this, e),\n            w,\n            C,\n            x;\n        w = 0;\n\n        for (C = u.length; w < C; w++) {\n          if (x = u[w], G.prototype.d.apply(s, qa[x]), 256 < x) s.d(u[++w], u[++w], v), s.d(u[++w], 5), s.d(u[++w], u[++w], v);else if (256 === x) break;\n        }\n\n        this.a = s.finish();\n        this.b = this.a.length;\n        break;\n\n      case oa:\n        var D = new G(B ? new Uint8Array(this.a.buffer) : this.a, this.b),\n            M,\n            z,\n            N,\n            X,\n            Y,\n            qb = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n            da,\n            Fa,\n            ea,\n            Ga,\n            la,\n            ta = Array(19),\n            Ha,\n            Z,\n            ma,\n            E,\n            Ia;\n        M = oa;\n        D.d(1, 1, v);\n        D.d(M, 2, v);\n        z = ra(this, e);\n        da = sa(this.U, 15);\n        Fa = ua(da);\n        ea = sa(this.T, 7);\n        Ga = ua(ea);\n\n        for (N = 286; 257 < N && 0 === da[N - 1]; N--) {\n          ;\n        }\n\n        for (X = 30; 1 < X && 0 === ea[X - 1]; X--) {\n          ;\n        }\n\n        var Ja = N,\n            Ka = X,\n            K = new (B ? Uint32Array : Array)(Ja + Ka),\n            y,\n            O,\n            A,\n            fa,\n            J = new (B ? Uint32Array : Array)(316),\n            H,\n            F,\n            P = new (B ? Uint8Array : Array)(19);\n\n        for (y = O = 0; y < Ja; y++) {\n          K[O++] = da[y];\n        }\n\n        for (y = 0; y < Ka; y++) {\n          K[O++] = ea[y];\n        }\n\n        if (!B) {\n          y = 0;\n\n          for (fa = P.length; y < fa; ++y) {\n            P[y] = 0;\n          }\n        }\n\n        y = H = 0;\n\n        for (fa = K.length; y < fa; y += O) {\n          for (O = 1; y + O < fa && K[y + O] === K[y]; ++O) {\n            ;\n          }\n\n          A = O;\n          if (0 === K[y]) {\n            if (3 > A) for (; 0 < A--;) {\n              J[H++] = 0, P[0]++;\n            } else for (; 0 < A;) {\n              F = 138 > A ? A : 138, F > A - 3 && F < A && (F = A - 3), 10 >= F ? (J[H++] = 17, J[H++] = F - 3, P[17]++) : (J[H++] = 18, J[H++] = F - 11, P[18]++), A -= F;\n            }\n          } else if (J[H++] = K[y], P[K[y]]++, A--, 3 > A) for (; 0 < A--;) {\n            J[H++] = K[y], P[K[y]]++;\n          } else for (; 0 < A;) {\n            F = 6 > A ? A : 6, F > A - 3 && F < A && (F = A - 3), J[H++] = 16, J[H++] = F - 3, P[16]++, A -= F;\n          }\n        }\n\n        b = B ? J.subarray(0, H) : J.slice(0, H);\n        la = sa(P, 7);\n\n        for (E = 0; 19 > E; E++) {\n          ta[E] = la[qb[E]];\n        }\n\n        for (Y = 19; 4 < Y && 0 === ta[Y - 1]; Y--) {\n          ;\n        }\n\n        Ha = ua(la);\n        D.d(N - 257, 5, v);\n        D.d(X - 1, 5, v);\n        D.d(Y - 4, 4, v);\n\n        for (E = 0; E < Y; E++) {\n          D.d(ta[E], 3, v);\n        }\n\n        E = 0;\n\n        for (Ia = b.length; E < Ia; E++) {\n          if (Z = b[E], D.d(Ha[Z], la[Z], v), 16 <= Z) {\n            E++;\n\n            switch (Z) {\n              case 16:\n                ma = 2;\n                break;\n\n              case 17:\n                ma = 3;\n                break;\n\n              case 18:\n                ma = 7;\n                break;\n\n              default:\n                q(\"invalid code: \" + Z);\n            }\n\n            D.d(b[E], ma, v);\n          }\n        }\n\n        var La = [Fa, da],\n            Ma = [Ga, ea],\n            Q,\n            Na,\n            ga,\n            wa,\n            Oa,\n            Pa,\n            Qa,\n            Ra;\n        Oa = La[0];\n        Pa = La[1];\n        Qa = Ma[0];\n        Ra = Ma[1];\n        Q = 0;\n\n        for (Na = z.length; Q < Na; ++Q) {\n          if (ga = z[Q], D.d(Oa[ga], Pa[ga], v), 256 < ga) D.d(z[++Q], z[++Q], v), wa = z[++Q], D.d(Qa[wa], Ra[wa], v), D.d(z[++Q], z[++Q], v);else if (256 === ga) break;\n        }\n\n        this.a = D.finish();\n        this.b = this.a.length;\n        break;\n\n      default:\n        q(\"invalid compression type\");\n    }\n\n    return this.a;\n  };\n\n  function va(b, a) {\n    this.length = b;\n    this.N = a;\n  }\n\n  var xa = function () {\n    function b(a) {\n      switch (v) {\n        case 3 === a:\n          return [257, a - 3, 0];\n\n        case 4 === a:\n          return [258, a - 4, 0];\n\n        case 5 === a:\n          return [259, a - 5, 0];\n\n        case 6 === a:\n          return [260, a - 6, 0];\n\n        case 7 === a:\n          return [261, a - 7, 0];\n\n        case 8 === a:\n          return [262, a - 8, 0];\n\n        case 9 === a:\n          return [263, a - 9, 0];\n\n        case 10 === a:\n          return [264, a - 10, 0];\n\n        case 12 >= a:\n          return [265, a - 11, 1];\n\n        case 14 >= a:\n          return [266, a - 13, 1];\n\n        case 16 >= a:\n          return [267, a - 15, 1];\n\n        case 18 >= a:\n          return [268, a - 17, 1];\n\n        case 22 >= a:\n          return [269, a - 19, 2];\n\n        case 26 >= a:\n          return [270, a - 23, 2];\n\n        case 30 >= a:\n          return [271, a - 27, 2];\n\n        case 34 >= a:\n          return [272, a - 31, 2];\n\n        case 42 >= a:\n          return [273, a - 35, 3];\n\n        case 50 >= a:\n          return [274, a - 43, 3];\n\n        case 58 >= a:\n          return [275, a - 51, 3];\n\n        case 66 >= a:\n          return [276, a - 59, 3];\n\n        case 82 >= a:\n          return [277, a - 67, 4];\n\n        case 98 >= a:\n          return [278, a - 83, 4];\n\n        case 114 >= a:\n          return [279, a - 99, 4];\n\n        case 130 >= a:\n          return [280, a - 115, 4];\n\n        case 162 >= a:\n          return [281, a - 131, 5];\n\n        case 194 >= a:\n          return [282, a - 163, 5];\n\n        case 226 >= a:\n          return [283, a - 195, 5];\n\n        case 257 >= a:\n          return [284, a - 227, 5];\n\n        case 258 === a:\n          return [285, a - 258, 0];\n\n        default:\n          q(\"invalid length: \" + a);\n      }\n    }\n\n    var a = [],\n        c,\n        d;\n\n    for (c = 3; 258 >= c; c++) {\n      d = b(c), a[c] = d[2] << 24 | d[1] << 16 | d[0];\n    }\n\n    return a;\n  }(),\n      ya = B ? new Uint32Array(xa) : xa;\n\n  function ra(b, a) {\n    function c(a, c) {\n      var b = a.N,\n          d = [],\n          f = 0,\n          e;\n      e = ya[a.length];\n      d[f++] = e & 65535;\n      d[f++] = e >> 16 & 255;\n      d[f++] = e >> 24;\n      var g;\n\n      switch (v) {\n        case 1 === b:\n          g = [0, b - 1, 0];\n          break;\n\n        case 2 === b:\n          g = [1, b - 2, 0];\n          break;\n\n        case 3 === b:\n          g = [2, b - 3, 0];\n          break;\n\n        case 4 === b:\n          g = [3, b - 4, 0];\n          break;\n\n        case 6 >= b:\n          g = [4, b - 5, 1];\n          break;\n\n        case 8 >= b:\n          g = [5, b - 7, 1];\n          break;\n\n        case 12 >= b:\n          g = [6, b - 9, 2];\n          break;\n\n        case 16 >= b:\n          g = [7, b - 13, 2];\n          break;\n\n        case 24 >= b:\n          g = [8, b - 17, 3];\n          break;\n\n        case 32 >= b:\n          g = [9, b - 25, 3];\n          break;\n\n        case 48 >= b:\n          g = [10, b - 33, 4];\n          break;\n\n        case 64 >= b:\n          g = [11, b - 49, 4];\n          break;\n\n        case 96 >= b:\n          g = [12, b - 65, 5];\n          break;\n\n        case 128 >= b:\n          g = [13, b - 97, 5];\n          break;\n\n        case 192 >= b:\n          g = [14, b - 129, 6];\n          break;\n\n        case 256 >= b:\n          g = [15, b - 193, 6];\n          break;\n\n        case 384 >= b:\n          g = [16, b - 257, 7];\n          break;\n\n        case 512 >= b:\n          g = [17, b - 385, 7];\n          break;\n\n        case 768 >= b:\n          g = [18, b - 513, 8];\n          break;\n\n        case 1024 >= b:\n          g = [19, b - 769, 8];\n          break;\n\n        case 1536 >= b:\n          g = [20, b - 1025, 9];\n          break;\n\n        case 2048 >= b:\n          g = [21, b - 1537, 9];\n          break;\n\n        case 3072 >= b:\n          g = [22, b - 2049, 10];\n          break;\n\n        case 4096 >= b:\n          g = [23, b - 3073, 10];\n          break;\n\n        case 6144 >= b:\n          g = [24, b - 4097, 11];\n          break;\n\n        case 8192 >= b:\n          g = [25, b - 6145, 11];\n          break;\n\n        case 12288 >= b:\n          g = [26, b - 8193, 12];\n          break;\n\n        case 16384 >= b:\n          g = [27, b - 12289, 12];\n          break;\n\n        case 24576 >= b:\n          g = [28, b - 16385, 13];\n          break;\n\n        case 32768 >= b:\n          g = [29, b - 24577, 13];\n          break;\n\n        default:\n          q(\"invalid distance\");\n      }\n\n      e = g;\n      d[f++] = e[0];\n      d[f++] = e[1];\n      d[f++] = e[2];\n      var h, k;\n      h = 0;\n\n      for (k = d.length; h < k; ++h) {\n        l[n++] = d[h];\n      }\n\n      u[d[0]]++;\n      w[d[3]]++;\n      s = a.length + c - 1;\n      p = null;\n    }\n\n    var d,\n        e,\n        f,\n        g,\n        k,\n        h = {},\n        m,\n        r,\n        p,\n        l = B ? new Uint16Array(2 * a.length) : [],\n        n = 0,\n        s = 0,\n        u = new (B ? Uint32Array : Array)(286),\n        w = new (B ? Uint32Array : Array)(30),\n        C = b.F,\n        x;\n\n    if (!B) {\n      for (f = 0; 285 >= f;) {\n        u[f++] = 0;\n      }\n\n      for (f = 0; 29 >= f;) {\n        w[f++] = 0;\n      }\n    }\n\n    u[256] = 1;\n    d = 0;\n\n    for (e = a.length; d < e; ++d) {\n      f = k = 0;\n\n      for (g = 3; f < g && d + f !== e; ++f) {\n        k = k << 8 | a[d + f];\n      }\n\n      h[k] === t && (h[k] = []);\n      m = h[k];\n\n      if (!(0 < s--)) {\n        for (; 0 < m.length && 32768 < d - m[0];) {\n          m.shift();\n        }\n\n        if (d + 3 >= e) {\n          p && c(p, -1);\n          f = 0;\n\n          for (g = e - d; f < g; ++f) {\n            x = a[d + f], l[n++] = x, ++u[x];\n          }\n\n          break;\n        }\n\n        0 < m.length ? (r = za(a, d, m), p ? p.length < r.length ? (x = a[d - 1], l[n++] = x, ++u[x], c(r, 0)) : c(p, -1) : r.length < C ? p = r : c(r, 0)) : p ? c(p, -1) : (x = a[d], l[n++] = x, ++u[x]);\n      }\n\n      m.push(d);\n    }\n\n    l[n++] = 256;\n    u[256]++;\n    b.U = u;\n    b.T = w;\n    return B ? l.subarray(0, n) : l;\n  }\n\n  function za(b, a, c) {\n    var d,\n        e,\n        f = 0,\n        g,\n        k,\n        h,\n        m,\n        r = b.length;\n    k = 0;\n    m = c.length;\n\n    a: for (; k < m; k++) {\n      d = c[m - k - 1];\n      g = 3;\n\n      if (3 < f) {\n        for (h = f; 3 < h; h--) {\n          if (b[d + h - 1] !== b[a + h - 1]) continue a;\n        }\n\n        g = f;\n      }\n\n      for (; 258 > g && a + g < r && b[d + g] === b[a + g];) {\n        ++g;\n      }\n\n      g > f && (e = d, f = g);\n      if (258 === g) break;\n    }\n\n    return new va(f, a - e);\n  }\n\n  function sa(b, a) {\n    var c = b.length,\n        d = new ka(572),\n        e = new (B ? Uint8Array : Array)(c),\n        f,\n        g,\n        k,\n        h,\n        m;\n    if (!B) for (h = 0; h < c; h++) {\n      e[h] = 0;\n    }\n\n    for (h = 0; h < c; ++h) {\n      0 < b[h] && d.push(h, b[h]);\n    }\n\n    f = Array(d.length / 2);\n    g = new (B ? Uint32Array : Array)(d.length / 2);\n    if (1 === f.length) return e[d.pop().index] = 1, e;\n    h = 0;\n\n    for (m = d.length / 2; h < m; ++h) {\n      f[h] = d.pop(), g[h] = f[h].value;\n    }\n\n    k = Aa(g, g.length, a);\n    h = 0;\n\n    for (m = f.length; h < m; ++h) {\n      e[f[h].index] = k[h];\n    }\n\n    return e;\n  }\n\n  function Aa(b, a, c) {\n    function d(b) {\n      var c = h[b][m[b]];\n      c === a ? (d(b + 1), d(b + 1)) : --g[c];\n      ++m[b];\n    }\n\n    var e = new (B ? Uint16Array : Array)(c),\n        f = new (B ? Uint8Array : Array)(c),\n        g = new (B ? Uint8Array : Array)(a),\n        k = Array(c),\n        h = Array(c),\n        m = Array(c),\n        r = (1 << c) - a,\n        p = 1 << c - 1,\n        l,\n        n,\n        s,\n        u,\n        w;\n    e[c - 1] = a;\n\n    for (n = 0; n < c; ++n) {\n      r < p ? f[n] = 0 : (f[n] = 1, r -= p), r <<= 1, e[c - 2 - n] = (e[c - 1 - n] / 2 | 0) + a;\n    }\n\n    e[0] = f[0];\n    k[0] = Array(e[0]);\n    h[0] = Array(e[0]);\n\n    for (n = 1; n < c; ++n) {\n      e[n] > 2 * e[n - 1] + f[n] && (e[n] = 2 * e[n - 1] + f[n]), k[n] = Array(e[n]), h[n] = Array(e[n]);\n    }\n\n    for (l = 0; l < a; ++l) {\n      g[l] = c;\n    }\n\n    for (s = 0; s < e[c - 1]; ++s) {\n      k[c - 1][s] = b[s], h[c - 1][s] = s;\n    }\n\n    for (l = 0; l < c; ++l) {\n      m[l] = 0;\n    }\n\n    1 === f[c - 1] && (--g[0], ++m[c - 1]);\n\n    for (n = c - 2; 0 <= n; --n) {\n      u = l = 0;\n      w = m[n + 1];\n\n      for (s = 0; s < e[n]; s++) {\n        u = k[n + 1][w] + k[n + 1][w + 1], u > b[l] ? (k[n][s] = u, h[n][s] = a, w += 2) : (k[n][s] = b[l], h[n][s] = l, ++l);\n      }\n\n      m[n] = 0;\n      1 === f[n] && d(n);\n    }\n\n    return g;\n  }\n\n  function ua(b) {\n    var a = new (B ? Uint16Array : Array)(b.length),\n        c = [],\n        d = [],\n        e = 0,\n        f,\n        g,\n        k,\n        h;\n    f = 0;\n\n    for (g = b.length; f < g; f++) {\n      c[b[f]] = (c[b[f]] | 0) + 1;\n    }\n\n    f = 1;\n\n    for (g = 16; f <= g; f++) {\n      d[f] = e, e += c[f] | 0, e <<= 1;\n    }\n\n    f = 0;\n\n    for (g = b.length; f < g; f++) {\n      e = d[b[f]];\n      d[b[f]] += 1;\n      k = a[f] = 0;\n\n      for (h = b[f]; k < h; k++) {\n        a[f] = a[f] << 1 | e & 1, e >>>= 1;\n      }\n    }\n\n    return a;\n  }\n\n  ;\n\n  function Ba(b, a) {\n    this.input = b;\n    this.b = this.c = 0;\n    this.g = {};\n    a && (a.flags && (this.g = a.flags), \"string\" === typeof a.filename && (this.filename = a.filename), \"string\" === typeof a.comment && (this.w = a.comment), a.deflateOptions && (this.l = a.deflateOptions));\n    this.l || (this.l = {});\n  }\n\n  Ba.prototype.h = function () {\n    var b,\n        a,\n        c,\n        d,\n        e,\n        f,\n        g,\n        k,\n        h = new (B ? Uint8Array : Array)(32768),\n        m = 0,\n        r = this.input,\n        p = this.c,\n        l = this.filename,\n        n = this.w;\n    h[m++] = 31;\n    h[m++] = 139;\n    h[m++] = 8;\n    b = 0;\n    this.g.fname && (b |= Ca);\n    this.g.fcomment && (b |= Da);\n    this.g.fhcrc && (b |= Ea);\n    h[m++] = b;\n    a = (Date.now ? Date.now() : +new Date()) / 1E3 | 0;\n    h[m++] = a & 255;\n    h[m++] = a >>> 8 & 255;\n    h[m++] = a >>> 16 & 255;\n    h[m++] = a >>> 24 & 255;\n    h[m++] = 0;\n    h[m++] = Sa;\n\n    if (this.g.fname !== t) {\n      g = 0;\n\n      for (k = l.length; g < k; ++g) {\n        f = l.charCodeAt(g), 255 < f && (h[m++] = f >>> 8 & 255), h[m++] = f & 255;\n      }\n\n      h[m++] = 0;\n    }\n\n    if (this.g.comment) {\n      g = 0;\n\n      for (k = n.length; g < k; ++g) {\n        f = n.charCodeAt(g), 255 < f && (h[m++] = f >>> 8 & 255), h[m++] = f & 255;\n      }\n\n      h[m++] = 0;\n    }\n\n    this.g.fhcrc && (c = ha(h, 0, m) & 65535, h[m++] = c & 255, h[m++] = c >>> 8 & 255);\n    this.l.outputBuffer = h;\n    this.l.outputIndex = m;\n    e = new na(r, this.l);\n    h = e.h();\n    m = e.b;\n    B && (m + 8 > h.buffer.byteLength ? (this.a = new Uint8Array(m + 8), this.a.set(new Uint8Array(h.buffer)), h = this.a) : h = new Uint8Array(h.buffer));\n    d = ha(r, t, t);\n    h[m++] = d & 255;\n    h[m++] = d >>> 8 & 255;\n    h[m++] = d >>> 16 & 255;\n    h[m++] = d >>> 24 & 255;\n    k = r.length;\n    h[m++] = k & 255;\n    h[m++] = k >>> 8 & 255;\n    h[m++] = k >>> 16 & 255;\n    h[m++] = k >>> 24 & 255;\n    this.c = p;\n    B && m < h.length && (this.a = h = h.subarray(0, m));\n    return h;\n  };\n\n  var Sa = 255,\n      Ea = 2,\n      Ca = 8,\n      Da = 16;\n\n  function V(b, a) {\n    this.o = [];\n    this.p = 32768;\n    this.e = this.j = this.c = this.s = 0;\n    this.input = B ? new Uint8Array(b) : b;\n    this.u = !1;\n    this.q = Ta;\n    this.K = !1;\n    if (a || !(a = {})) a.index && (this.c = a.index), a.bufferSize && (this.p = a.bufferSize), a.bufferType && (this.q = a.bufferType), a.resize && (this.K = a.resize);\n\n    switch (this.q) {\n      case Ua:\n        this.b = 32768;\n        this.a = new (B ? Uint8Array : Array)(32768 + this.p + 258);\n        break;\n\n      case Ta:\n        this.b = 0;\n        this.a = new (B ? Uint8Array : Array)(this.p);\n        this.f = this.S;\n        this.z = this.O;\n        this.r = this.Q;\n        break;\n\n      default:\n        q(Error(\"invalid inflate mode\"));\n    }\n  }\n\n  var Ua = 0,\n      Ta = 1;\n\n  V.prototype.i = function () {\n    for (; !this.u;) {\n      var b = W(this, 3);\n      b & 1 && (this.u = v);\n      b >>>= 1;\n\n      switch (b) {\n        case 0:\n          var a = this.input,\n              c = this.c,\n              d = this.a,\n              e = this.b,\n              f = a.length,\n              g = t,\n              k = t,\n              h = d.length,\n              m = t;\n          this.e = this.j = 0;\n          c + 1 >= f && q(Error(\"invalid uncompressed block header: LEN\"));\n          g = a[c++] | a[c++] << 8;\n          c + 1 >= f && q(Error(\"invalid uncompressed block header: NLEN\"));\n          k = a[c++] | a[c++] << 8;\n          g === ~k && q(Error(\"invalid uncompressed block header: length verify\"));\n          c + g > a.length && q(Error(\"input buffer is broken\"));\n\n          switch (this.q) {\n            case Ua:\n              for (; e + g > d.length;) {\n                m = h - e;\n                g -= m;\n                if (B) d.set(a.subarray(c, c + m), e), e += m, c += m;else for (; m--;) {\n                  d[e++] = a[c++];\n                }\n                this.b = e;\n                d = this.f();\n                e = this.b;\n              }\n\n              break;\n\n            case Ta:\n              for (; e + g > d.length;) {\n                d = this.f({\n                  B: 2\n                });\n              }\n\n              break;\n\n            default:\n              q(Error(\"invalid inflate mode\"));\n          }\n\n          if (B) d.set(a.subarray(c, c + g), e), e += g, c += g;else for (; g--;) {\n            d[e++] = a[c++];\n          }\n          this.c = c;\n          this.b = e;\n          this.a = d;\n          break;\n\n        case 1:\n          this.r(Va, Wa);\n          break;\n\n        case 2:\n          for (var r = W(this, 5) + 257, p = W(this, 5) + 1, l = W(this, 4) + 4, n = new (B ? Uint8Array : Array)(Xa.length), s = t, u = t, w = t, C = t, x = t, D = t, M = t, z = t, N = t, z = 0; z < l; ++z) {\n            n[Xa[z]] = W(this, 3);\n          }\n\n          if (!B) {\n            z = l;\n\n            for (l = n.length; z < l; ++z) {\n              n[Xa[z]] = 0;\n            }\n          }\n\n          s = T(n);\n          C = new (B ? Uint8Array : Array)(r + p);\n          z = 0;\n\n          for (N = r + p; z < N;) {\n            switch (x = Ya(this, s), x) {\n              case 16:\n                for (M = 3 + W(this, 2); M--;) {\n                  C[z++] = D;\n                }\n\n                break;\n\n              case 17:\n                for (M = 3 + W(this, 3); M--;) {\n                  C[z++] = 0;\n                }\n\n                D = 0;\n                break;\n\n              case 18:\n                for (M = 11 + W(this, 7); M--;) {\n                  C[z++] = 0;\n                }\n\n                D = 0;\n                break;\n\n              default:\n                D = C[z++] = x;\n            }\n          }\n\n          u = B ? T(C.subarray(0, r)) : T(C.slice(0, r));\n          w = B ? T(C.subarray(r)) : T(C.slice(r));\n          this.r(u, w);\n          break;\n\n        default:\n          q(Error(\"unknown BTYPE: \" + b));\n      }\n    }\n\n    return this.z();\n  };\n\n  var Za = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      Xa = B ? new Uint16Array(Za) : Za,\n      $a = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],\n      ab = B ? new Uint16Array($a) : $a,\n      bb = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],\n      cb = B ? new Uint8Array(bb) : bb,\n      db = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],\n      eb = B ? new Uint16Array(db) : db,\n      fb = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],\n      gb = B ? new Uint8Array(fb) : fb,\n      hb = new (B ? Uint8Array : Array)(288),\n      $,\n      ib;\n  $ = 0;\n\n  for (ib = hb.length; $ < ib; ++$) {\n    hb[$] = 143 >= $ ? 8 : 255 >= $ ? 9 : 279 >= $ ? 7 : 8;\n  }\n\n  var Va = T(hb),\n      jb = new (B ? Uint8Array : Array)(30),\n      kb,\n      lb;\n  kb = 0;\n\n  for (lb = jb.length; kb < lb; ++kb) {\n    jb[kb] = 5;\n  }\n\n  var Wa = T(jb);\n\n  function W(b, a) {\n    for (var c = b.j, d = b.e, e = b.input, f = b.c, g = e.length, k; d < a;) {\n      f >= g && q(Error(\"input buffer is broken\")), c |= e[f++] << d, d += 8;\n    }\n\n    k = c & (1 << a) - 1;\n    b.j = c >>> a;\n    b.e = d - a;\n    b.c = f;\n    return k;\n  }\n\n  function Ya(b, a) {\n    for (var c = b.j, d = b.e, e = b.input, f = b.c, g = e.length, k = a[0], h = a[1], m, r; d < h && !(f >= g);) {\n      c |= e[f++] << d, d += 8;\n    }\n\n    m = k[c & (1 << h) - 1];\n    r = m >>> 16;\n    r > d && q(Error(\"invalid code length: \" + r));\n    b.j = c >> r;\n    b.e = d - r;\n    b.c = f;\n    return m & 65535;\n  }\n\n  V.prototype.r = function (b, a) {\n    var c = this.a,\n        d = this.b;\n    this.A = b;\n\n    for (var e = c.length - 258, f, g, k, h; 256 !== (f = Ya(this, b));) {\n      if (256 > f) d >= e && (this.b = d, c = this.f(), d = this.b), c[d++] = f;else {\n        g = f - 257;\n        h = ab[g];\n        0 < cb[g] && (h += W(this, cb[g]));\n        f = Ya(this, a);\n        k = eb[f];\n        0 < gb[f] && (k += W(this, gb[f]));\n        d >= e && (this.b = d, c = this.f(), d = this.b);\n\n        for (; h--;) {\n          c[d] = c[d++ - k];\n        }\n      }\n    }\n\n    for (; 8 <= this.e;) {\n      this.e -= 8, this.c--;\n    }\n\n    this.b = d;\n  };\n\n  V.prototype.Q = function (b, a) {\n    var c = this.a,\n        d = this.b;\n    this.A = b;\n\n    for (var e = c.length, f, g, k, h; 256 !== (f = Ya(this, b));) {\n      if (256 > f) d >= e && (c = this.f(), e = c.length), c[d++] = f;else {\n        g = f - 257;\n        h = ab[g];\n        0 < cb[g] && (h += W(this, cb[g]));\n        f = Ya(this, a);\n        k = eb[f];\n        0 < gb[f] && (k += W(this, gb[f]));\n        d + h > e && (c = this.f(), e = c.length);\n\n        for (; h--;) {\n          c[d] = c[d++ - k];\n        }\n      }\n    }\n\n    for (; 8 <= this.e;) {\n      this.e -= 8, this.c--;\n    }\n\n    this.b = d;\n  };\n\n  V.prototype.f = function () {\n    var b = new (B ? Uint8Array : Array)(this.b - 32768),\n        a = this.b - 32768,\n        c,\n        d,\n        e = this.a;\n    if (B) b.set(e.subarray(32768, b.length));else {\n      c = 0;\n\n      for (d = b.length; c < d; ++c) {\n        b[c] = e[c + 32768];\n      }\n    }\n    this.o.push(b);\n    this.s += b.length;\n    if (B) e.set(e.subarray(a, a + 32768));else for (c = 0; 32768 > c; ++c) {\n      e[c] = e[a + c];\n    }\n    this.b = 32768;\n    return e;\n  };\n\n  V.prototype.S = function (b) {\n    var a,\n        c = this.input.length / this.c + 1 | 0,\n        d,\n        e,\n        f,\n        g = this.input,\n        k = this.a;\n    b && (\"number\" === typeof b.B && (c = b.B), \"number\" === typeof b.M && (c += b.M));\n    2 > c ? (d = (g.length - this.c) / this.A[2], f = 258 * (d / 2) | 0, e = f < k.length ? k.length + f : k.length << 1) : e = k.length * c;\n    B ? (a = new Uint8Array(e), a.set(k)) : a = k;\n    return this.a = a;\n  };\n\n  V.prototype.z = function () {\n    var b = 0,\n        a = this.a,\n        c = this.o,\n        d,\n        e = new (B ? Uint8Array : Array)(this.s + (this.b - 32768)),\n        f,\n        g,\n        k,\n        h;\n    if (0 === c.length) return B ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b);\n    f = 0;\n\n    for (g = c.length; f < g; ++f) {\n      d = c[f];\n      k = 0;\n\n      for (h = d.length; k < h; ++k) {\n        e[b++] = d[k];\n      }\n    }\n\n    f = 32768;\n\n    for (g = this.b; f < g; ++f) {\n      e[b++] = a[f];\n    }\n\n    this.o = [];\n    return this.buffer = e;\n  };\n\n  V.prototype.O = function () {\n    var b,\n        a = this.b;\n    B ? this.K ? (b = new Uint8Array(a), b.set(this.a.subarray(0, a))) : b = this.a.subarray(0, a) : (this.a.length > a && (this.a.length = a), b = this.a);\n    return this.buffer = b;\n  };\n\n  function mb(b) {\n    this.input = b;\n    this.c = 0;\n    this.G = [];\n    this.R = !1;\n  }\n\n  mb.prototype.i = function () {\n    for (var b = this.input.length; this.c < b;) {\n      var a = new ja(),\n          c = t,\n          d = t,\n          e = t,\n          f = t,\n          g = t,\n          k = t,\n          h = t,\n          m = t,\n          r = t,\n          p = this.input,\n          l = this.c;\n      a.C = p[l++];\n      a.D = p[l++];\n      (31 !== a.C || 139 !== a.D) && q(Error(\"invalid file signature:\" + a.C + \",\" + a.D));\n      a.v = p[l++];\n\n      switch (a.v) {\n        case 8:\n          break;\n\n        default:\n          q(Error(\"unknown compression method: \" + a.v));\n      }\n\n      a.n = p[l++];\n      m = p[l++] | p[l++] << 8 | p[l++] << 16 | p[l++] << 24;\n      a.$ = new Date(1E3 * m);\n      a.ba = p[l++];\n      a.aa = p[l++];\n      0 < (a.n & 4) && (a.W = p[l++] | p[l++] << 8, l += a.W);\n\n      if (0 < (a.n & Ca)) {\n        h = [];\n\n        for (k = 0; 0 < (g = p[l++]);) {\n          h[k++] = String.fromCharCode(g);\n        }\n\n        a.name = h.join(\"\");\n      }\n\n      if (0 < (a.n & Da)) {\n        h = [];\n\n        for (k = 0; 0 < (g = p[l++]);) {\n          h[k++] = String.fromCharCode(g);\n        }\n\n        a.w = h.join(\"\");\n      }\n\n      0 < (a.n & Ea) && (a.P = ha(p, 0, l) & 65535, a.P !== (p[l++] | p[l++] << 8) && q(Error(\"invalid header crc16\")));\n      c = p[p.length - 4] | p[p.length - 3] << 8 | p[p.length - 2] << 16 | p[p.length - 1] << 24;\n      p.length - l - 4 - 4 < 512 * c && (f = c);\n      d = new V(p, {\n        index: l,\n        bufferSize: f\n      });\n      a.data = e = d.i();\n      l = d.c;\n      a.Y = r = (p[l++] | p[l++] << 8 | p[l++] << 16 | p[l++] << 24) >>> 0;\n      ha(e, t, t) !== r && q(Error(\"invalid CRC-32 checksum: 0x\" + ha(e, t, t).toString(16) + \" / 0x\" + r.toString(16)));\n      a.Z = c = (p[l++] | p[l++] << 8 | p[l++] << 16 | p[l++] << 24) >>> 0;\n      (e.length & 4294967295) !== c && q(Error(\"invalid input size: \" + (e.length & 4294967295) + \" / \" + c));\n      this.G.push(a);\n      this.c = l;\n    }\n\n    this.R = v;\n    var n = this.G,\n        s,\n        u,\n        w = 0,\n        C = 0,\n        x;\n    s = 0;\n\n    for (u = n.length; s < u; ++s) {\n      C += n[s].data.length;\n    }\n\n    if (B) {\n      x = new Uint8Array(C);\n\n      for (s = 0; s < u; ++s) {\n        x.set(n[s].data, w), w += n[s].data.length;\n      }\n    } else {\n      x = [];\n\n      for (s = 0; s < u; ++s) {\n        x[s] = n[s].data;\n      }\n\n      x = Array.prototype.concat.apply([], x);\n    }\n\n    return x;\n  };\n\n  function nb(b) {\n    if (\"string\" === typeof b) {\n      var a = b.split(\"\"),\n          c,\n          d;\n      c = 0;\n\n      for (d = a.length; c < d; c++) {\n        a[c] = (a[c].charCodeAt(0) & 255) >>> 0;\n      }\n\n      b = a;\n    }\n\n    for (var e = 1, f = 0, g = b.length, k, h = 0; 0 < g;) {\n      k = 1024 < g ? 1024 : g;\n      g -= k;\n\n      do {\n        e += b[h++], f += e;\n      } while (--k);\n\n      e %= 65521;\n      f %= 65521;\n    }\n\n    return (f << 16 | e) >>> 0;\n  }\n\n  ;\n\n  function ob(b, a) {\n    var c, d;\n    this.input = b;\n    this.c = 0;\n    if (a || !(a = {})) a.index && (this.c = a.index), a.verify && (this.V = a.verify);\n    c = b[this.c++];\n    d = b[this.c++];\n\n    switch (c & 15) {\n      case pb:\n        this.method = pb;\n        break;\n\n      default:\n        q(Error(\"unsupported compression method\"));\n    }\n\n    0 !== ((c << 8) + d) % 31 && q(Error(\"invalid fcheck flag:\" + ((c << 8) + d) % 31));\n    d & 32 && q(Error(\"fdict flag is not supported\"));\n    this.J = new V(b, {\n      index: this.c,\n      bufferSize: a.bufferSize,\n      bufferType: a.bufferType,\n      resize: a.resize\n    });\n  }\n\n  ob.prototype.i = function () {\n    var b = this.input,\n        a,\n        c;\n    a = this.J.i();\n    this.c = this.J.c;\n    this.V && (c = (b[this.c++] << 24 | b[this.c++] << 16 | b[this.c++] << 8 | b[this.c++]) >>> 0, c !== nb(a) && q(Error(\"invalid adler-32 checksum\")));\n    return a;\n  };\n\n  var pb = 8;\n\n  function rb(b, a) {\n    this.input = b;\n    this.a = new (B ? Uint8Array : Array)(32768);\n    this.k = sb.t;\n    var c = {},\n        d;\n    if ((a || !(a = {})) && \"number\" === typeof a.compressionType) this.k = a.compressionType;\n\n    for (d in a) {\n      c[d] = a[d];\n    }\n\n    c.outputBuffer = this.a;\n    this.I = new na(this.input, c);\n  }\n\n  var sb = pa;\n\n  rb.prototype.h = function () {\n    var b,\n        a,\n        c,\n        d,\n        e,\n        f,\n        g,\n        k = 0;\n    g = this.a;\n    b = pb;\n\n    switch (b) {\n      case pb:\n        a = Math.LOG2E * Math.log(32768) - 8;\n        break;\n\n      default:\n        q(Error(\"invalid compression method\"));\n    }\n\n    c = a << 4 | b;\n    g[k++] = c;\n\n    switch (b) {\n      case pb:\n        switch (this.k) {\n          case sb.NONE:\n            e = 0;\n            break;\n\n          case sb.L:\n            e = 1;\n            break;\n\n          case sb.t:\n            e = 2;\n            break;\n\n          default:\n            q(Error(\"unsupported compression type\"));\n        }\n\n        break;\n\n      default:\n        q(Error(\"invalid compression method\"));\n    }\n\n    d = e << 6 | 0;\n    g[k++] = d | 31 - (256 * c + d) % 31;\n    f = nb(this.input);\n    this.I.b = k;\n    g = this.I.h();\n    k = g.length;\n    B && (g = new Uint8Array(g.buffer), g.length <= k + 4 && (this.a = new Uint8Array(g.length + 4), this.a.set(g), g = this.a), g = g.subarray(0, k + 4));\n    g[k++] = f >> 24 & 255;\n    g[k++] = f >> 16 & 255;\n    g[k++] = f >> 8 & 255;\n    g[k++] = f & 255;\n    return g;\n  };\n\n  exports.deflate = tb;\n  exports.deflateSync = ub;\n  exports.inflate = vb;\n  exports.inflateSync = wb;\n  exports.gzip = xb;\n  exports.gzipSync = yb;\n  exports.gunzip = zb;\n  exports.gunzipSync = Ab;\n\n  function tb(b, a, c) {\n    process.nextTick(function () {\n      var d, e;\n\n      try {\n        e = ub(b, c);\n      } catch (f) {\n        d = f;\n      }\n\n      a(d, e);\n    });\n  }\n\n  function ub(b, a) {\n    var c;\n    c = new rb(b).h();\n    a || (a = {});\n    return a.H ? c : Bb(c);\n  }\n\n  function vb(b, a, c) {\n    process.nextTick(function () {\n      var d, e;\n\n      try {\n        e = wb(b, c);\n      } catch (f) {\n        d = f;\n      }\n\n      a(d, e);\n    });\n  }\n\n  function wb(b, a) {\n    var c;\n    b.subarray = b.slice;\n    c = new ob(b).i();\n    a || (a = {});\n    return a.noBuffer ? c : Bb(c);\n  }\n\n  function xb(b, a, c) {\n    process.nextTick(function () {\n      var d, e;\n\n      try {\n        e = yb(b, c);\n      } catch (f) {\n        d = f;\n      }\n\n      a(d, e);\n    });\n  }\n\n  function yb(b, a) {\n    var c;\n    b.subarray = b.slice;\n    c = new Ba(b).h();\n    a || (a = {});\n    return a.H ? c : Bb(c);\n  }\n\n  function zb(b, a, c) {\n    process.nextTick(function () {\n      var d, e;\n\n      try {\n        e = Ab(b, c);\n      } catch (f) {\n        d = f;\n      }\n\n      a(d, e);\n    });\n  }\n\n  function Ab(b, a) {\n    var c;\n    b.subarray = b.slice;\n    c = new mb(b).i();\n    a || (a = {});\n    return a.H ? c : Bb(c);\n  }\n\n  function Bb(b) {\n    var a = new Buffer(b.length),\n        c,\n        d;\n    c = 0;\n\n    for (d = b.length; c < d; ++c) {\n      a[c] = b[c];\n    }\n\n    return a;\n  }\n\n  ;\n}).call(this);\n\n//# sourceURL=webpack://tesseract.js/./node_modules/zlibjs/bin/node-zlib.js?");

/***/ }),

/***/ "./src/constants/PSM.js":
/*!******************************!*\
  !*** ./src/constants/PSM.js ***!
  \******************************/
/***/ ((module) => {

eval("/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n  RAW_LINE: '13'\n};\n\n//# sourceURL=webpack://tesseract.js/./src/constants/PSM.js?");

/***/ }),

/***/ "./src/constants/imageType.js":
/*!************************************!*\
  !*** ./src/constants/imageType.js ***!
  \************************************/
/***/ ((module) => {

eval("module.exports = {\n  COLOR: 0,\n  GREY: 1,\n  BINARY: 2\n};\n\n//# sourceURL=webpack://tesseract.js/./src/constants/imageType.js?");

/***/ }),

/***/ "./src/utils/getEnvironment.js":
/*!*************************************!*\
  !*** ./src/utils/getEnvironment.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar isElectron = __webpack_require__(/*! is-electron */ \"./node_modules/is-electron/index.js\");\n\nmodule.exports = function (key) {\n  var env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (isElectron()) {\n    env.type = 'electron';\n  } else if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object') {\n    env.type = 'browser';\n  } else if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === 'object' && \"function\" === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n\n//# sourceURL=webpack://tesseract.js/./src/utils/getEnvironment.js?");

/***/ }),

/***/ "./src/utils/log.js":
/*!**************************!*\
  !*** ./src/utils/log.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports) {

eval("var _this = this;\n\nvar logging = false;\nexports.logging = logging;\n\nexports.setLogging = function (_logging) {\n  logging = _logging;\n};\n\nexports.log = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return logging ? console.log.apply(_this, args) : null;\n};\n\n//# sourceURL=webpack://tesseract.js/./src/utils/log.js?");

/***/ }),

/***/ "./src/worker-script/browser/cache.js":
/*!********************************************!*\
  !*** ./src/worker-script/browser/cache.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var _require = __webpack_require__(/*! idb-keyval */ \"./node_modules/idb-keyval/dist/idb-keyval.mjs\"),\n    set = _require.set,\n    get = _require.get,\n    del = _require.del;\n\nmodule.exports = {\n  readCache: get,\n  writeCache: set,\n  deleteCache: del,\n  checkCache: function checkCache(path) {\n    return get(path).then(function (v) {\n      return typeof v !== 'undefined';\n    });\n  }\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/browser/cache.js?");

/***/ }),

/***/ "./src/worker-script/browser/getCore.js":
/*!**********************************************!*\
  !*** ./src/worker-script/browser/getCore.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = __webpack_require__(/*! wasm-feature-detect */ \"./node_modules/wasm-feature-detect/dist/esm/index.js\"),\n    simd = _require.simd;\n\nvar _require2 = __webpack_require__(/*! ../../../package.json */ \"./package.json\"),\n    dependencies = _require2.dependencies;\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(corePath, res) {\n    var corePathImport, simdSupport;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof __webpack_require__.g.TesseractCore === 'undefined')) {\n              _context.next = 15;\n              break;\n            }\n\n            res.progress({\n              status: 'loading tesseract core',\n              progress: 0\n            }); // If the user specifies a core path, we use that\n            // Otherwise, we detect the correct core based on SIMD support\n\n            corePathImport = corePath;\n\n            if (corePathImport) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return simd();\n\n          case 6:\n            simdSupport = _context.sent;\n\n            if (simdSupport) {\n              corePathImport = \"https://unpkg.com/tesseract.js-core@v\".concat(dependencies['tesseract.js-core'].substring(1), \"/tesseract-core-simd.wasm.js\");\n            } else {\n              corePathImport = \"https://unpkg.com/tesseract.js-core@v\".concat(dependencies['tesseract.js-core'].substring(1), \"/tesseract-core.wasm.js\");\n            }\n\n          case 8:\n            __webpack_require__.g.importScripts(corePathImport);\n\n            if (!(typeof __webpack_require__.g.TesseractCoreWASM !== 'undefined' && (typeof WebAssembly === \"undefined\" ? \"undefined\" : _typeof(WebAssembly)) === 'object')) {\n              _context.next = 13;\n              break;\n            }\n\n            __webpack_require__.g.TesseractCore = __webpack_require__.g.TesseractCoreWASM;\n            _context.next = 14;\n            break;\n\n          case 13:\n            throw Error('Failed to load TesseractCore');\n\n          case 14:\n            res.progress({\n              status: 'loading tesseract core',\n              progress: 1\n            });\n\n          case 15:\n            return _context.abrupt(\"return\", __webpack_require__.g.TesseractCore);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/browser/getCore.js?");

/***/ }),

/***/ "./src/worker-script/browser/gunzip.js":
/*!*********************************************!*\
  !*** ./src/worker-script/browser/gunzip.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! zlibjs */ \"./node_modules/zlibjs/bin/node-zlib.js\").gunzipSync;\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/browser/gunzip.js?");

/***/ }),

/***/ "./src/worker-script/browser/index.js":
/*!********************************************!*\
  !*** ./src/worker-script/browser/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Browser worker scripts\n *\n * @fileoverview Browser worker implementation\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nvar worker = __webpack_require__(/*! .. */ \"./src/worker-script/index.js\");\n\nvar getCore = __webpack_require__(/*! ./getCore */ \"./src/worker-script/browser/getCore.js\");\n\nvar gunzip = __webpack_require__(/*! ./gunzip */ \"./src/worker-script/browser/gunzip.js\");\n\nvar cache = __webpack_require__(/*! ./cache */ \"./src/worker-script/browser/cache.js\");\n/*\n * register message handler\n */\n\n\n__webpack_require__.g.addEventListener('message', function (_ref) {\n  var data = _ref.data;\n  worker.dispatchHandlers(data, function (obj) {\n    return postMessage(obj);\n  });\n});\n/*\n * getCore is a sync function to load and return\n * TesseractCore.\n */\n\nworker.setAdapter(_objectSpread({\n  getCore: getCore,\n  gunzip: gunzip,\n  fetch: function fetch() {}\n}, cache));\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/browser/index.js?");

/***/ }),

/***/ "./src/worker-script/constants/defaultOutput.js":
/*!******************************************************!*\
  !*** ./src/worker-script/constants/defaultOutput.js ***!
  \******************************************************/
/***/ ((module) => {

eval("/*\n * default output formats for tesseract.js\n */\nmodule.exports = {\n  text: true,\n  blocks: true,\n  hocr: true,\n  tsv: true,\n  box: false,\n  unlv: false,\n  osd: false,\n  pdf: false,\n  imageColor: false,\n  imageGrey: false,\n  imageBinary: false\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/constants/defaultOutput.js?");

/***/ }),

/***/ "./src/worker-script/constants/defaultParams.js":
/*!******************************************************!*\
  !*** ./src/worker-script/constants/defaultParams.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * default params for tesseract.js\n */\nvar PSM = __webpack_require__(/*! ../../constants/PSM */ \"./src/constants/PSM.js\");\n\nmodule.exports = {\n  tessedit_pageseg_mode: PSM.SINGLE_BLOCK,\n  tessedit_char_whitelist: '',\n  tessjs_create_hocr: '1',\n  tessjs_create_tsv: '1',\n  tessjs_create_box: '0',\n  tessjs_create_unlv: '0',\n  tessjs_create_osd: '0'\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/constants/defaultParams.js?");

/***/ }),

/***/ "./src/worker-script/index.js":
/*!************************************!*\
  !*** ./src/worker-script/index.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var _this = this;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n *\n * Worker script for browser and node\n *\n * @fileoverview Worker script for browser and node\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\n__webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nvar fileType = __webpack_require__(/*! file-type */ \"./node_modules/file-type/index.js\");\n\nvar isURL = __webpack_require__(/*! is-url */ \"./node_modules/is-url/index.js\");\n\nvar dump = __webpack_require__(/*! ./utils/dump */ \"./src/worker-script/utils/dump.js\");\n\nvar isWebWorker = __webpack_require__(/*! ../utils/getEnvironment */ \"./src/utils/getEnvironment.js\")('type') === 'webworker';\n\nvar setImage = __webpack_require__(/*! ./utils/setImage */ \"./src/worker-script/utils/setImage.js\");\n\nvar defaultParams = __webpack_require__(/*! ./constants/defaultParams */ \"./src/worker-script/constants/defaultParams.js\");\n\nvar defaultOutput = __webpack_require__(/*! ./constants/defaultOutput */ \"./src/worker-script/constants/defaultOutput.js\");\n\nvar _require = __webpack_require__(/*! ../utils/log */ \"./src/utils/log.js\"),\n    log = _require.log,\n    setLogging = _require.setLogging;\n\nvar PSM = __webpack_require__(/*! ../constants/PSM */ \"./src/constants/PSM.js\");\n/*\n * Tesseract Module returned by TesseractCore.\n */\n\n\nvar TessModule;\n/*\n * TessearctBaseAPI instance\n */\n\nvar api = null;\nvar latestJob;\nvar adapter = {};\nvar params = defaultParams;\n\nvar load = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref, res) {\n    var workerId, jobId, _ref$payload$options, corePath, logging, Core;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            workerId = _ref.workerId, jobId = _ref.jobId, _ref$payload$options = _ref.payload.options, corePath = _ref$payload$options.corePath, logging = _ref$payload$options.logging;\n            setLogging(logging);\n\n            if (TessModule) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 5;\n            return adapter.getCore(corePath, res);\n\n          case 5:\n            Core = _context.sent;\n            res.progress({\n              workerId: workerId,\n              status: 'initializing tesseract',\n              progress: 0\n            });\n            Core({\n              TesseractProgress: function TesseractProgress(percent) {\n                latestJob.progress({\n                  workerId: workerId,\n                  jobId: jobId,\n                  status: 'recognizing text',\n                  progress: Math.max(0, (percent - 30) / 70)\n                });\n              }\n            }).then(function (tessModule) {\n              TessModule = tessModule;\n              res.progress({\n                workerId: workerId,\n                status: 'initialized tesseract',\n                progress: 1\n              });\n              res.resolve({\n                loaded: true\n              });\n            });\n            _context.next = 11;\n            break;\n\n          case 10:\n            res.resolve({\n              loaded: true\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function load(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar FS = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3, res) {\n    var _TessModule$FS;\n\n    var workerId, _ref3$payload, method, args;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            workerId = _ref3.workerId, _ref3$payload = _ref3.payload, method = _ref3$payload.method, args = _ref3$payload.args;\n            log(\"[\".concat(workerId, \"]: FS.\").concat(method, \" with args \").concat(args));\n            res.resolve((_TessModule$FS = TessModule.FS)[method].apply(_TessModule$FS, _toConsumableArray(args)));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function FS(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar loadLanguage = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref5, res) {\n    var workerId, _ref5$payload, langs, _ref5$payload$options, langPath, dataPath, cachePath, cacheMethod, _ref5$payload$options2, gzip, loadAndGunzipFile;\n\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            workerId = _ref5.workerId, _ref5$payload = _ref5.payload, langs = _ref5$payload.langs, _ref5$payload$options = _ref5$payload.options, langPath = _ref5$payload$options.langPath, dataPath = _ref5$payload$options.dataPath, cachePath = _ref5$payload$options.cachePath, cacheMethod = _ref5$payload$options.cacheMethod, _ref5$payload$options2 = _ref5$payload$options.gzip, gzip = _ref5$payload$options2 === void 0 ? true : _ref5$payload$options2;\n\n            loadAndGunzipFile = /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_lang) {\n                var lang, readCache, data, newData, _data, path, fetchUrl, resp, type;\n\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        lang = typeof _lang === 'string' ? _lang : _lang.code;\n                        readCache = ['refresh', 'none'].includes(cacheMethod) ? function () {\n                          return Promise.resolve();\n                        } : adapter.readCache;\n                        data = null;\n                        newData = false;\n                        _context3.prev = 4;\n                        _context3.next = 7;\n                        return readCache(\"\".concat(cachePath || '.', \"/\").concat(lang, \".traineddata\"));\n\n                      case 7:\n                        _data = _context3.sent;\n\n                        if (!(typeof _data !== 'undefined')) {\n                          _context3.next = 14;\n                          break;\n                        }\n\n                        log(\"[\".concat(workerId, \"]: Load \").concat(lang, \".traineddata from cache\"));\n                        res.progress({\n                          workerId: workerId,\n                          status: 'loading language traineddata (from cache)',\n                          progress: 0.5\n                        });\n                        data = _data;\n                        _context3.next = 15;\n                        break;\n\n                      case 14:\n                        throw Error('Not found in cache');\n\n                      case 15:\n                        _context3.next = 42;\n                        break;\n\n                      case 17:\n                        _context3.prev = 17;\n                        _context3.t0 = _context3[\"catch\"](4);\n                        newData = true;\n                        log(\"[\".concat(workerId, \"]: Load \").concat(lang, \".traineddata from \").concat(langPath));\n\n                        if (!(typeof _lang === 'string')) {\n                          _context3.next = 41;\n                          break;\n                        }\n\n                        path = null;\n\n                        if (isURL(langPath) || langPath.startsWith('moz-extension://') || langPath.startsWith('chrome-extension://') || langPath.startsWith('file://')) {\n                          /** When langPath is an URL */\n                          path = langPath.replace(/\\/$/, '');\n                        }\n\n                        if (!(path !== null)) {\n                          _context3.next = 36;\n                          break;\n                        }\n\n                        fetchUrl = \"\".concat(path, \"/\").concat(lang, \".traineddata\").concat(gzip ? '.gz' : '');\n                        _context3.next = 28;\n                        return (isWebWorker ? fetch : adapter.fetch)(fetchUrl);\n\n                      case 28:\n                        resp = _context3.sent;\n\n                        if (resp.ok) {\n                          _context3.next = 31;\n                          break;\n                        }\n\n                        throw Error(\"Network error while fetching \".concat(fetchUrl, \". Response code: \").concat(resp.status));\n\n                      case 31:\n                        _context3.next = 33;\n                        return resp.arrayBuffer();\n\n                      case 33:\n                        data = _context3.sent;\n                        _context3.next = 39;\n                        break;\n\n                      case 36:\n                        _context3.next = 38;\n                        return adapter.readCache(\"\".concat(langPath, \"/\").concat(lang, \".traineddata\").concat(gzip ? '.gz' : ''));\n\n                      case 38:\n                        data = _context3.sent;\n\n                      case 39:\n                        _context3.next = 42;\n                        break;\n\n                      case 41:\n                        data = _lang.data; // eslint-disable-line\n\n                      case 42:\n                        data = new Uint8Array(data);\n                        type = fileType(data);\n\n                        if (typeof type !== 'undefined' && type.mime === 'application/gzip') {\n                          data = adapter.gunzip(data);\n                        }\n\n                        if (TessModule) {\n                          if (dataPath) {\n                            try {\n                              TessModule.FS.mkdir(dataPath);\n                            } catch (err) {\n                              res.reject(err.toString());\n                            }\n                          }\n\n                          TessModule.FS.writeFile(\"\".concat(dataPath || '.', \"/\").concat(lang, \".traineddata\"), data);\n                        }\n\n                        if (!(newData && ['write', 'refresh', undefined].includes(cacheMethod))) {\n                          _context3.next = 56;\n                          break;\n                        }\n\n                        _context3.prev = 47;\n                        _context3.next = 50;\n                        return adapter.writeCache(\"\".concat(cachePath || '.', \"/\").concat(lang, \".traineddata\"), data);\n\n                      case 50:\n                        _context3.next = 56;\n                        break;\n\n                      case 52:\n                        _context3.prev = 52;\n                        _context3.t1 = _context3[\"catch\"](47);\n                        log(\"[\".concat(workerId, \"]: Failed to write \").concat(lang, \".traineddata to cache due to error:\"));\n                        log(_context3.t1.toString());\n\n                      case 56:\n                        return _context3.abrupt(\"return\", Promise.resolve(data));\n\n                      case 57:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[4, 17], [47, 52]]);\n              }));\n\n              return function loadAndGunzipFile(_x7) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            res.progress({\n              workerId: workerId,\n              status: 'loading language traineddata',\n              progress: 0\n            });\n            _context4.prev = 3;\n            _context4.next = 6;\n            return Promise.all((typeof langs === 'string' ? langs.split('+') : langs).map(loadAndGunzipFile));\n\n          case 6:\n            res.progress({\n              workerId: workerId,\n              status: 'loaded language traineddata',\n              progress: 1\n            });\n            res.resolve(langs);\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](3);\n            res.reject(_context4.t0.toString());\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 10]]);\n  }));\n\n  return function loadLanguage(_x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar setParameters = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(_ref8, res) {\n    var _params;\n\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _params = _ref8.payload.params;\n            Object.keys(_params).filter(function (k) {\n              return !k.startsWith('tessjs_');\n            }).forEach(function (key) {\n              api.SetVariable(key, _params[key]);\n            });\n            params = _objectSpread(_objectSpread({}, params), _params);\n\n            if (typeof res !== 'undefined') {\n              res.resolve(params);\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function setParameters(_x8, _x9) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nvar initialize = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref10, res) {\n    var workerId, _ref10$payload, _langs, oem, config, langs, configFile, configStr, status;\n\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            workerId = _ref10.workerId, _ref10$payload = _ref10.payload, _langs = _ref10$payload.langs, oem = _ref10$payload.oem, config = _ref10$payload.config;\n            langs = typeof _langs === 'string' ? _langs : _langs.map(function (l) {\n              return typeof l === 'string' ? l : l.data;\n            }).join('+');\n            _context6.prev = 2;\n            res.progress({\n              workerId: workerId,\n              status: 'initializing api',\n              progress: 0\n            });\n\n            if (api !== null) {\n              api.End();\n            }\n\n            // config argument may either be config file text, or object with key/value pairs\n            // In the latter case we convert to config file text here\n            if (_typeof(config) === 'object') {\n              configStr = JSON.stringify(config).replace(/,/g, '\\n').replace(/:/g, ' ').replace(/[\"'{}]/g, '');\n            } else {\n              configStr = config;\n            }\n\n            if (typeof configStr === 'string') {\n              configFile = '/config';\n              TessModule.FS.writeFile(configFile, configStr);\n            }\n\n            api = new TessModule.TessBaseAPI();\n            status = api.Init(null, langs, oem);\n\n            if (status === -1) {\n              res.reject('initialization failed');\n            }\n\n            params = defaultParams;\n            _context6.next = 13;\n            return setParameters({\n              payload: {\n                params: params\n              }\n            });\n\n          case 13:\n            res.progress({\n              workerId: workerId,\n              status: 'initialized api',\n              progress: 1\n            });\n            res.resolve();\n            _context6.next = 20;\n            break;\n\n          case 17:\n            _context6.prev = 17;\n            _context6.t0 = _context6[\"catch\"](2);\n            res.reject(_context6.t0.toString());\n\n          case 20:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 17]]);\n  }));\n\n  return function initialize(_x10, _x11) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nvar getPDFInternal = function getPDFInternal(title, textonly) {\n  var pdfRenderer = new TessModule.TessPDFRenderer('tesseract-ocr', '/', textonly);\n  pdfRenderer.BeginDocument(title);\n  pdfRenderer.AddImage(api);\n  pdfRenderer.EndDocument();\n\n  TessModule._free(pdfRenderer);\n\n  return TessModule.FS.readFile('/tesseract-ocr.pdf');\n};\n\nvar getPDF = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_ref12, res) {\n    var _ref12$payload, title, textonly;\n\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _ref12$payload = _ref12.payload, title = _ref12$payload.title, textonly = _ref12$payload.textonly;\n            res.resolve(getPDFInternal(title, textonly));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getPDF(_x12, _x13) {\n    return _ref13.apply(this, arguments);\n  };\n}(); // Combines default output with user-specified options and\n// counts (1) total output formats requested and (2) outputs that require OCR\n\n\nvar processOutput = function processOutput(output) {\n  var workingOutput = JSON.parse(JSON.stringify(defaultOutput)); // Output formats were set using `setParameters` in previous versions\n  // These settings are copied over for compatability\n\n  if (params.tessjs_create_box === '1') workingOutput.box = true;\n  if (params.tessjs_create_hocr === '1') workingOutput.hocr = true;\n  if (params.tessjs_create_osd === '1') workingOutput.osd = true;\n  if (params.tessjs_create_tsv === '1') workingOutput.tsv = true;\n  if (params.tessjs_create_unlv === '1') workingOutput.unlv = true;\n  var nonRecOutputs = ['imageColor', 'imageGrey', 'imageBinary'];\n  var recOutputCount = 0;\n\n  for (var _i = 0, _Object$keys = Object.keys(output); _i < _Object$keys.length; _i++) {\n    var prop = _Object$keys[_i];\n    workingOutput[prop] = output[prop];\n  }\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(workingOutput); _i2 < _Object$keys2.length; _i2++) {\n    var _prop = _Object$keys2[_i2];\n\n    if (workingOutput[_prop]) {\n      if (!nonRecOutputs.includes(_prop)) {\n        recOutputCount += 1;\n      }\n    }\n  }\n\n  return {\n    workingOutput: workingOutput,\n    recOutputCount: recOutputCount\n  };\n}; // List of options for Tesseract.js (rather than passed through to Tesseract),\n// not including those with prefix \"tessjs_\"\n\n\nvar tessjsOptions = ['rectangle', 'pdfTitle', 'pdfTextOnly', 'rotateAuto', 'rotateRadians'];\n\nvar recognize = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(_ref14, res) {\n    var _ref14$payload, image, options, output, optionsTess, _i3, _Object$keys3, param, _i4, _Object$keys4, prop, _processOutput, workingOutput, recOutputCount, rotateRadiansFinal, psmInit, psmEdit, rotateRadiansCalc, rec, pdfTitle, pdfTextOnly, result;\n\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _ref14$payload = _ref14.payload, image = _ref14$payload.image, options = _ref14$payload.options, output = _ref14$payload.output;\n\n            try {\n              optionsTess = {};\n\n              if (_typeof(options) === 'object' && Object.keys(options).length > 0) {\n                // The options provided by users contain a mix of options for Tesseract.js\n                // and parameters passed through to Tesseract.\n                for (_i3 = 0, _Object$keys3 = Object.keys(options); _i3 < _Object$keys3.length; _i3++) {\n                  param = _Object$keys3[_i3];\n\n                  if (!param.startsWith('tessjs_') && !tessjsOptions.includes(param)) {\n                    optionsTess[param] = options[param];\n                  }\n                }\n              }\n\n              if (output.debug) {\n                optionsTess.debug_file = '/debugInternal.txt';\n                TessModule.FS.writeFile('/debugInternal.txt', '');\n              } // If any parameters are changed here they are changed back at the end\n\n\n              if (Object.keys(optionsTess).length > 0) {\n                api.SaveParameters();\n\n                for (_i4 = 0, _Object$keys4 = Object.keys(optionsTess); _i4 < _Object$keys4.length; _i4++) {\n                  prop = _Object$keys4[_i4];\n                  api.SetVariable(prop, optionsTess[prop]);\n                }\n              }\n\n              _processOutput = processOutput(output), workingOutput = _processOutput.workingOutput, recOutputCount = _processOutput.recOutputCount; // When the auto-rotate option is True, setImage is called with no angle,\n              // then the angle is calculated by Tesseract and then setImage is re-called.\n              // Otherwise, setImage is called once using the user-provided rotateRadiansFinal value.\n\n              if (options.rotateAuto) {\n                // The angle is only detected if auto page segmentation is used\n                // Therefore, if this is not the mode specified by the user, it is enabled temporarily here\n                psmInit = api.GetPageSegMode();\n                psmEdit = false;\n\n                if (![PSM.AUTO, PSM.AUTO_ONLY, PSM.OSD].includes(psmInit)) {\n                  psmEdit = true;\n                  api.SetVariable('tessedit_pageseg_mode', String(PSM.AUTO));\n                }\n\n                setImage(TessModule, api, image);\n                api.FindLines();\n                rotateRadiansCalc = api.GetAngle(); // Restore user-provided PSM setting\n\n                if (psmEdit) {\n                  api.SetVariable('tessedit_pageseg_mode', String(psmInit));\n                } // Small angles (<0.005 radians/~0.3 degrees) are ignored to save on runtime\n\n\n                if (Math.abs(rotateRadiansCalc) >= 0.005) {\n                  rotateRadiansFinal = rotateRadiansCalc;\n                  setImage(TessModule, api, image, rotateRadiansFinal);\n                } else {\n                  // Image needs to be reset if run with different PSM setting earlier\n                  if (psmEdit) {\n                    setImage(TessModule, api, image);\n                  }\n\n                  rotateRadiansFinal = 0;\n                }\n              } else {\n                rotateRadiansFinal = options.rotateRadians || 0;\n                setImage(TessModule, api, image, rotateRadiansFinal);\n              }\n\n              rec = options.rectangle;\n\n              if (_typeof(rec) === 'object') {\n                api.SetRectangle(rec.left, rec.top, rec.width, rec.height);\n              }\n\n              if (recOutputCount > 0) {\n                api.Recognize(null);\n              } else {\n                log('Skipping recognition: all output options requiring recognition are disabled.');\n              }\n\n              pdfTitle = options.pdfTitle;\n              pdfTextOnly = options.pdfTextOnly;\n              result = dump(TessModule, api, workingOutput, {\n                pdfTitle: pdfTitle,\n                pdfTextOnly: pdfTextOnly\n              });\n              result.rotateRadians = rotateRadiansFinal;\n              if (output.debug) TessModule.FS.unlink('/debugInternal.txt');\n\n              if (Object.keys(optionsTess).length > 0) {\n                api.RestoreParameters();\n              }\n\n              res.resolve(result);\n            } catch (err) {\n              res.reject(err.toString());\n            }\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function recognize(_x14, _x15) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nvar detect = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref16, res) {\n    var image, results, best, oid, sid;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            image = _ref16.payload.image;\n\n            try {\n              setImage(TessModule, api, image);\n              results = new TessModule.OSResults();\n\n              if (!api.DetectOS(results)) {\n                res.resolve({\n                  tesseract_script_id: null,\n                  script: null,\n                  script_confidence: null,\n                  orientation_degrees: null,\n                  orientation_confidence: null\n                });\n              } else {\n                best = results.best_result;\n                oid = best.orientation_id;\n                sid = best.script_id;\n                res.resolve({\n                  tesseract_script_id: sid,\n                  script: results.unicharset.get_script_from_script_id(sid),\n                  script_confidence: best.sconfidence,\n                  orientation_degrees: [0, 270, 180, 90][oid],\n                  orientation_confidence: best.oconfidence\n                });\n              }\n            } catch (err) {\n              res.reject(err.toString());\n            }\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function detect(_x16, _x17) {\n    return _ref17.apply(this, arguments);\n  };\n}();\n\nvar terminate = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(_, res) {\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            try {\n              if (api !== null) {\n                api.End();\n              }\n\n              res.resolve({\n                terminated: true\n              });\n            } catch (err) {\n              res.reject(err.toString());\n            }\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function terminate(_x18, _x19) {\n    return _ref18.apply(this, arguments);\n  };\n}();\n/**\n * dispatchHandlers\n *\n * @name dispatchHandlers\n * @function worker data handler\n * @access public\n * @param {object} data\n * @param {string} data.jobId - unique job id\n * @param {string} data.action - action of the job, only recognize and detect for now\n * @param {object} data.payload - data for the job\n * @param {function} send - trigger job to work\n */\n\n\nexports.dispatchHandlers = function (packet, send) {\n  var res = function res(status, data) {\n    send(_objectSpread(_objectSpread({}, packet), {}, {\n      status: status,\n      data: data\n    }));\n  };\n\n  res.resolve = res.bind(_this, 'resolve');\n  res.reject = res.bind(_this, 'reject');\n  res.progress = res.bind(_this, 'progress');\n  latestJob = res;\n  ({\n    load: load,\n    FS: FS,\n    loadLanguage: loadLanguage,\n    initialize: initialize,\n    setParameters: setParameters,\n    recognize: recognize,\n    getPDF: getPDF,\n    detect: detect,\n    terminate: terminate\n  })[packet.action](packet, res).catch(function (err) {\n    return res.reject(err.toString());\n  });\n};\n/**\n * setAdapter\n *\n * @name setAdapter\n * @function\n * @access public\n * @param {object} adapter - implementation of the worker, different in browser and node environment\n */\n\n\nexports.setAdapter = function (_adapter) {\n  adapter = _adapter;\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/index.js?");

/***/ }),

/***/ "./src/worker-script/utils/arrayBufferToBase64.js":
/*!********************************************************!*\
  !*** ./src/worker-script/utils/arrayBufferToBase64.js ***!
  \********************************************************/
/***/ ((module) => {

eval("// Copied from https://gist.github.com/jonleighton/958841\n// Copyright 2011 Jon Leighton, MIT LICENSE\n\n/* eslint no-bitwise: 0 */\nmodule.exports = function (arrayBuffer) {\n  var base64 = '';\n  var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  var bytes = new Uint8Array(arrayBuffer);\n  var byteLength = bytes.byteLength;\n  var byteRemainder = byteLength % 3;\n  var mainLength = byteLength - byteRemainder;\n  var a;\n  var b;\n  var c;\n  var d;\n  var chunk; // Main loop deals with bytes in chunks of 3\n\n  for (var i = 0; i < mainLength; i += 3) {\n    // Combine the three bytes into a single integer\n    chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2]; // Use bitmasks to extract 6-bit segments from the triplet\n\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n\n    d = chunk & 63; // 63       = 2^6 - 1\n    // Convert the raw binary segments to the appropriate ASCII encoding\n\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n  } // Deal with the remaining bytes and padding\n\n\n  if (byteRemainder === 1) {\n    chunk = bytes[mainLength];\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n    // Set the 4 least significant bits to zero\n\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n    base64 += \"\".concat(encodings[a] + encodings[b], \"==\");\n  } else if (byteRemainder === 2) {\n    chunk = bytes[mainLength] << 8 | bytes[mainLength + 1];\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n    // Set the 2 least significant bits to zero\n\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n    base64 += \"\".concat(encodings[a] + encodings[b] + encodings[c], \"=\");\n  }\n\n  return base64;\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/utils/arrayBufferToBase64.js?");

/***/ }),

/***/ "./src/worker-script/utils/dump.js":
/*!*****************************************!*\
  !*** ./src/worker-script/utils/dump.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n *\n * Dump data to a big JSON tree\n *\n * @fileoverview dump data to JSON tree\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nvar arrayBufferToBase64 = __webpack_require__(/*! ./arrayBufferToBase64 */ \"./src/worker-script/utils/arrayBufferToBase64.js\");\n\nvar imageType = __webpack_require__(/*! ../../constants/imageType */ \"./src/constants/imageType.js\");\n/**\n * deindent\n *\n * The generated HOCR is excessively indented, so\n * we get rid of that indentation\n *\n * @name deindent\n * @function deindent string\n * @access public\n */\n\n\nvar deindent = function deindent(html) {\n  var lines = html.split('\\n');\n\n  if (lines[0].substring(0, 2) === '  ') {\n    for (var i = 0; i < lines.length; i += 1) {\n      if (lines[i].substring(0, 2) === '  ') {\n        lines[i] = lines[i].slice(2);\n      }\n    }\n  }\n\n  return lines.join('\\n');\n};\n/**\n * dump\n *\n * @name dump\n * @function dump recognition result to a JSON object\n * @access public\n */\n\n\nmodule.exports = function (TessModule, api, output, options) {\n  var _options$pdfTitle, _options$pdfTextOnly;\n\n  var ri = api.GetIterator();\n  var RIL_BLOCK = TessModule.RIL_BLOCK,\n      RIL_PARA = TessModule.RIL_PARA,\n      RIL_TEXTLINE = TessModule.RIL_TEXTLINE,\n      RIL_WORD = TessModule.RIL_WORD,\n      RIL_SYMBOL = TessModule.RIL_SYMBOL;\n  var blocks = [];\n  var block;\n  var para;\n  var textline;\n  var word;\n  var symbol;\n\n  var enumToString = function enumToString(value, prefix) {\n    return Object.keys(TessModule).filter(function (e) {\n      return e.startsWith(\"\".concat(prefix, \"_\")) && TessModule[e] === value;\n    }).map(function (e) {\n      return e.slice(prefix.length + 1);\n    })[0];\n  };\n\n  var getImage = function getImage(type) {\n    api.WriteImage(type, '/image.png');\n    var pngBuffer = TessModule.FS.readFile('/image.png');\n    var pngStr = \"data:image/png;base64,\".concat(arrayBufferToBase64(pngBuffer.buffer));\n    TessModule.FS.unlink('/image.png');\n    return pngStr;\n  };\n\n  var getPDFInternal = function getPDFInternal(title, textonly) {\n    var pdfRenderer = new TessModule.TessPDFRenderer('tesseract-ocr', '/', textonly);\n    pdfRenderer.BeginDocument(title);\n    pdfRenderer.AddImage(api);\n    pdfRenderer.EndDocument();\n\n    TessModule._free(pdfRenderer);\n\n    return TessModule.FS.readFile('/tesseract-ocr.pdf');\n  };\n\n  if (output.blocks) {\n    ri.Begin();\n\n    do {\n      if (ri.IsAtBeginningOf(RIL_BLOCK)) {\n        var poly = ri.BlockPolygon();\n        var polygon = null; // BlockPolygon() returns null when automatic page segmentation is off\n\n        if (TessModule.getPointer(poly) > 0) {\n          var n = poly.get_n();\n          var px = poly.get_x();\n          var py = poly.get_y();\n          polygon = [];\n\n          for (var i = 0; i < n; i += 1) {\n            polygon.push([px.getValue(i), py.getValue(i)]);\n          }\n          /*\n           * TODO: find out why _ptaDestroy doesn't work\n           */\n          // TessModule._ptaDestroy(TessModule.getPointer(poly));\n\n        }\n\n        block = {\n          paragraphs: [],\n          text: ri.GetUTF8Text(RIL_BLOCK),\n          confidence: ri.Confidence(RIL_BLOCK),\n          baseline: ri.getBaseline(RIL_BLOCK),\n          bbox: ri.getBoundingBox(RIL_BLOCK),\n          blocktype: enumToString(ri.BlockType(), 'PT'),\n          polygon: polygon\n        };\n        blocks.push(block);\n      }\n\n      if (ri.IsAtBeginningOf(RIL_PARA)) {\n        para = {\n          lines: [],\n          text: ri.GetUTF8Text(RIL_PARA),\n          confidence: ri.Confidence(RIL_PARA),\n          baseline: ri.getBaseline(RIL_PARA),\n          bbox: ri.getBoundingBox(RIL_PARA),\n          is_ltr: !!ri.ParagraphIsLtr()\n        };\n        block.paragraphs.push(para);\n      }\n\n      if (ri.IsAtBeginningOf(RIL_TEXTLINE)) {\n        textline = {\n          words: [],\n          text: ri.GetUTF8Text(RIL_TEXTLINE),\n          confidence: ri.Confidence(RIL_TEXTLINE),\n          baseline: ri.getBaseline(RIL_TEXTLINE),\n          bbox: ri.getBoundingBox(RIL_TEXTLINE)\n        };\n        para.lines.push(textline);\n      }\n\n      if (ri.IsAtBeginningOf(RIL_WORD)) {\n        var fontInfo = ri.getWordFontAttributes();\n        var wordDir = ri.WordDirection();\n        word = {\n          symbols: [],\n          choices: [],\n          text: ri.GetUTF8Text(RIL_WORD),\n          confidence: ri.Confidence(RIL_WORD),\n          baseline: ri.getBaseline(RIL_WORD),\n          bbox: ri.getBoundingBox(RIL_WORD),\n          is_numeric: !!ri.WordIsNumeric(),\n          in_dictionary: !!ri.WordIsFromDictionary(),\n          direction: enumToString(wordDir, 'DIR'),\n          language: ri.WordRecognitionLanguage(),\n          is_bold: fontInfo.is_bold,\n          is_italic: fontInfo.is_italic,\n          is_underlined: fontInfo.is_underlined,\n          is_monospace: fontInfo.is_monospace,\n          is_serif: fontInfo.is_serif,\n          is_smallcaps: fontInfo.is_smallcaps,\n          font_size: fontInfo.pointsize,\n          font_id: fontInfo.font_id,\n          font_name: fontInfo.font_name\n        };\n        var wc = new TessModule.WordChoiceIterator(ri);\n\n        do {\n          word.choices.push({\n            text: wc.GetUTF8Text(),\n            confidence: wc.Confidence()\n          });\n        } while (wc.Next());\n\n        TessModule.destroy(wc);\n        textline.words.push(word);\n      } // let image = null;\n      // var pix = ri.GetBinaryImage(TessModule.RIL_SYMBOL)\n      // var image = pix2array(pix);\n      // // for some reason it seems that things stop working if you destroy pics\n      // TessModule._pixDestroy(TessModule.getPointer(pix));\n\n\n      if (ri.IsAtBeginningOf(RIL_SYMBOL)) {\n        symbol = {\n          choices: [],\n          image: null,\n          text: ri.GetUTF8Text(RIL_SYMBOL),\n          confidence: ri.Confidence(RIL_SYMBOL),\n          baseline: ri.getBaseline(RIL_SYMBOL),\n          bbox: ri.getBoundingBox(RIL_SYMBOL),\n          is_superscript: !!ri.SymbolIsSuperscript(),\n          is_subscript: !!ri.SymbolIsSubscript(),\n          is_dropcap: !!ri.SymbolIsDropcap()\n        };\n        word.symbols.push(symbol);\n        var ci = new TessModule.ChoiceIterator(ri);\n\n        do {\n          symbol.choices.push({\n            text: ci.GetUTF8Text(),\n            confidence: ci.Confidence()\n          });\n        } while (ci.Next()); // TessModule.destroy(i);\n\n      }\n    } while (ri.Next(RIL_SYMBOL));\n\n    TessModule.destroy(ri);\n  }\n\n  return {\n    text: output.text ? api.GetUTF8Text() : null,\n    hocr: output.hocr ? deindent(api.GetHOCRText()) : null,\n    tsv: output.tsv ? api.GetTSVText() : null,\n    box: output.box ? api.GetBoxText() : null,\n    unlv: output.unlv ? api.GetUNLVText() : null,\n    osd: output.osd ? api.GetOsdText() : null,\n    pdf: output.pdf ? getPDFInternal((_options$pdfTitle = options.pdfTitle) !== null && _options$pdfTitle !== void 0 ? _options$pdfTitle : 'Tesseract OCR Result', (_options$pdfTextOnly = options.pdfTextOnly) !== null && _options$pdfTextOnly !== void 0 ? _options$pdfTextOnly : false) : null,\n    imageColor: output.imageColor ? getImage(imageType.COLOR) : null,\n    imageGrey: output.imageGrey ? getImage(imageType.GREY) : null,\n    imageBinary: output.imageBinary ? getImage(imageType.BINARY) : null,\n    confidence: api.MeanTextConf(),\n    blocks: output.blocks ? blocks : null,\n    psm: enumToString(api.GetPageSegMode(), 'PSM'),\n    oem: enumToString(api.oem(), 'OEM'),\n    version: api.Version(),\n    debug: output.debug ? TessModule.FS.readFile('/debugInternal.txt', {\n      encoding: 'utf8',\n      flags: 'a+'\n    }) : null\n  };\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/utils/dump.js?");

/***/ }),

/***/ "./src/worker-script/utils/setImage.js":
/*!*********************************************!*\
  !*** ./src/worker-script/utils/setImage.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar bmp = __webpack_require__(/*! bmp-js */ \"./node_modules/bmp-js/index.js\");\n\nvar fileType = __webpack_require__(/*! file-type */ \"./node_modules/file-type/index.js\");\n/**\n * setImage\n *\n * @name setImage\n * @function set image in tesseract for recognition\n * @access public\n */\n\n\nmodule.exports = function (TessModule, api, image) {\n  var _image$slice$toString, _image$slice$toString2;\n\n  var angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var type = fileType(image);\n  var exif = ((_image$slice$toString = image.slice(0, 500).toString().match(/\\x01\\x12\\x00\\x03\\x00\\x00\\x00\\x01\\x00(.)/)) === null || _image$slice$toString === void 0 ? void 0 : (_image$slice$toString2 = _image$slice$toString[1]) === null || _image$slice$toString2 === void 0 ? void 0 : _image$slice$toString2.charCodeAt(0)) || 1; // /*\n  //  * Leptonica supports some but not all bmp files\n  //  * @see https://github.com/DanBloomberg/leptonica/issues/607#issuecomment-1068802516\n  //  * We therefore use bmp-js to convert all bmp files into a format Leptonica is known to support\n  //  */\n\n  if (type && type.mime === 'image/bmp') {\n    // Not sure what this line actually does, but removing breaks the function\n    var buf = Buffer.from(Array.from(_objectSpread(_objectSpread({}, image), {}, {\n      length: Object.keys(image).length\n    })));\n    var bmpBuf = bmp.decode(buf);\n    TessModule.FS.writeFile('/input', bmp.encode(bmpBuf).data);\n  } else {\n    TessModule.FS.writeFile('/input', image);\n  }\n\n  var res = api.SetImageFile(exif, angle);\n  if (res === 1) throw Error('Error attempting to read image.');\n};\n\n//# sourceURL=webpack://tesseract.js/./src/worker-script/utils/setImage.js?");

/***/ }),

/***/ "./node_modules/idb-keyval/dist/idb-keyval.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/idb-keyval/dist/idb-keyval.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Store\": () => (/* binding */ Store),\n/* harmony export */   \"clear\": () => (/* binding */ clear),\n/* harmony export */   \"del\": () => (/* binding */ del),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"keys\": () => (/* binding */ keys),\n/* harmony export */   \"set\": () => (/* binding */ set)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Store = /*#__PURE__*/function () {\n  function Store() {\n    var dbName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'keyval-store';\n    var storeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'keyval';\n\n    _classCallCheck(this, Store);\n\n    this.storeName = storeName;\n    this._dbp = new Promise(function (resolve, reject) {\n      var openreq = indexedDB.open(dbName, 1);\n\n      openreq.onerror = function () {\n        return reject(openreq.error);\n      };\n\n      openreq.onsuccess = function () {\n        return resolve(openreq.result);\n      }; // First time setup: create an empty object store\n\n\n      openreq.onupgradeneeded = function () {\n        openreq.result.createObjectStore(storeName);\n      };\n    });\n  }\n\n  _createClass(Store, [{\n    key: \"_withIDBStore\",\n    value: function _withIDBStore(type, callback) {\n      var _this = this;\n\n      return this._dbp.then(function (db) {\n        return new Promise(function (resolve, reject) {\n          var transaction = db.transaction(_this.storeName, type);\n\n          transaction.oncomplete = function () {\n            return resolve();\n          };\n\n          transaction.onabort = transaction.onerror = function () {\n            return reject(transaction.error);\n          };\n\n          callback(transaction.objectStore(_this.storeName));\n        });\n      });\n    }\n  }]);\n\n  return Store;\n}();\n\nvar store;\n\nfunction getDefaultStore() {\n  if (!store) store = new Store();\n  return store;\n}\n\nfunction get(key) {\n  var store = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getDefaultStore();\n  var req;\n  return store._withIDBStore('readonly', function (store) {\n    req = store.get(key);\n  }).then(function () {\n    return req.result;\n  });\n}\n\nfunction set(key, value) {\n  var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultStore();\n  return store._withIDBStore('readwrite', function (store) {\n    store.put(value, key);\n  });\n}\n\nfunction del(key) {\n  var store = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getDefaultStore();\n  return store._withIDBStore('readwrite', function (store) {\n    store.delete(key);\n  });\n}\n\nfunction clear() {\n  var store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultStore();\n  return store._withIDBStore('readwrite', function (store) {\n    store.clear();\n  });\n}\n\nfunction keys() {\n  var store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultStore();\n  var keys = [];\n  return store._withIDBStore('readonly', function (store) {\n    // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n    // And openKeyCursor isn't supported by Safari.\n    (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\n      if (!this.result) return;\n      keys.push(this.result.key);\n      this.result.continue();\n    };\n  }).then(function () {\n    return keys;\n  });\n}\n\n\n\n//# sourceURL=webpack://tesseract.js/./node_modules/idb-keyval/dist/idb-keyval.mjs?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"name\":\"tesseract.js\",\"version\":\"4.0.2\",\"description\":\"Pure Javascript Multilingual OCR\",\"main\":\"src/index.js\",\"types\":\"src/index.d.ts\",\"unpkg\":\"dist/tesseract.min.js\",\"jsdelivr\":\"dist/tesseract.min.js\",\"scripts\":{\"start\":\"node scripts/server.js\",\"build\":\"rimraf dist && webpack --config scripts/webpack.config.prod.js && rollup -c scripts/rollup.esm.js\",\"profile:tesseract\":\"webpack-bundle-analyzer dist/tesseract-stats.json\",\"profile:worker\":\"webpack-bundle-analyzer dist/worker-stats.json\",\"prepublishOnly\":\"npm run build\",\"wait\":\"rimraf dist && wait-on http://localhost:3001/dist/tesseract.dev.js\",\"test\":\"npm-run-all -p -r start test:all\",\"test:all\":\"npm-run-all wait test:browser:* test:node:all\",\"test:node\":\"nyc mocha --exit --bail --require ./scripts/test-helper.js\",\"test:node:all\":\"npm run test:node -- ./tests/*.test.js\",\"test:browser-tpl\":\"mocha-headless-chrome -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300100\",\"test:browser:detect\":\"npm run test:browser-tpl -- -f ./tests/detect.test.html\",\"test:browser:recognize\":\"npm run test:browser-tpl -- -f ./tests/recognize.test.html\",\"test:browser:scheduler\":\"npm run test:browser-tpl -- -f ./tests/scheduler.test.html\",\"test:browser:FS\":\"npm run test:browser-tpl -- -f ./tests/FS.test.html\",\"lint\":\"eslint src\",\"lint:fix\":\"eslint --fix src\",\"postinstall\":\"opencollective-postinstall || true\"},\"browser\":{\"./src/worker/node/index.js\":\"./src/worker/browser/index.js\"},\"author\":\"\",\"contributors\":[\"jeromewu\"],\"license\":\"Apache-2.0\",\"devDependencies\":{\"@babel/core\":\"^7.18.7\",\"@babel/preset-env\":\"^7.18.7\",\"@rollup/plugin-commonjs\":\"^22.0.2\",\"acorn\":\"^6.4.0\",\"babel-loader\":\"^8.2.0\",\"buffer\":\"^6.0.3\",\"cors\":\"^2.8.5\",\"eslint\":\"^7.2.0\",\"eslint-config-airbnb-base\":\"^14.2.0\",\"eslint-plugin-import\":\"^2.22.1\",\"expect.js\":\"^0.3.1\",\"express\":\"^4.17.1\",\"mocha\":\"^10.0.0\",\"mocha-headless-chrome\":\"^4.0.0\",\"npm-run-all\":\"^4.1.5\",\"nyc\":\"^15.1.0\",\"rimraf\":\"^2.7.1\",\"rollup\":\"^2.79.0\",\"wait-on\":\"^3.3.0\",\"webpack\":\"^5.74.0\",\"webpack-bundle-analyzer\":\"^4.6.0\",\"webpack-cli\":\"^4.10.0\",\"webpack-dev-middleware\":\"^5.3.3\"},\"dependencies\":{\"babel-eslint\":\"^10.1.0\",\"bmp-js\":\"^0.1.0\",\"file-type\":\"^12.4.1\",\"idb-keyval\":\"^3.2.0\",\"is-electron\":\"^2.2.0\",\"is-url\":\"^1.2.4\",\"node-fetch\":\"^2.6.0\",\"opencollective-postinstall\":\"^2.0.2\",\"regenerator-runtime\":\"^0.13.3\",\"resolve-url\":\"^0.2.1\",\"tesseract.js-core\":\"^4.0.2\",\"wasm-feature-detect\":\"^1.2.11\",\"zlibjs\":\"^0.3.1\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/naptha/tesseract.js.git\"},\"bugs\":{\"url\":\"https://github.com/naptha/tesseract.js/issues\"},\"homepage\":\"https://github.com/naptha/tesseract.js\",\"collective\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/tesseractjs\"}}');\n\n//# sourceURL=webpack://tesseract.js/./package.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/worker-script/browser/index.js");
/******/ 	
/******/ })()
;